<div class="card">
    <div class="card-header bg-light">
        <div class="d-flex align-items-center">
            <span class="bg-white avatar avatar-sm me-2 text-gray-7 flex-shrink-0">
                <i class="ti ti-info-square-rounded fs-16"></i>
            </span>
            <h5 class="text-dark">Personal Information</h5>
        </div>
    </div>
    <div class="card-body pb-1">
        <div class="row">
            <div class="col-md-12">
                <div class="d-flex align-items-center flex-wrap row-gap-3 mb-3" id="studentPhotoContainer">
                    <div class="d-flex align-items-center justify-content-center avatar avatar-xxl border border-dashed me-2 flex-shrink-0 text-dark frames">
                        <i class="ti ti-photo-plus fs-16"></i>
                    </div>
                    <div class="profile-upload">
                        <div class="profile-uploader d-flex align-items-center">
                            <div class="drag-upload-btn mb-3">
                                Upload
                                <input type="file" name="photoFile" id="studentPhotoFile" class="form-control image-sign" accept="image/*">
                            </div>
                            <button type="button" id="openCameraBtn" class="btn btn-secondary ms-2 mb-3">
                                <i class="ti ti-camera"></i> Use Camera
                            </button>
                        </div>
                        <p class="fs-12">Upload image size 4MB, Format JPG, PNG, SVG</p>
                    </div>
                </div>
            </div>
        </div>
        <div class="row row-cols-xxl-5 row-cols-md-6">
            <div class="col-xxl col-xl-3 col-md-6" style="display:none">
                <div class="mb-3">
                    @Html.LabelFor(m => m.Basic.AcademicYear, new { @class = "form-label required" })
                    @Html.DropDownListFor(m => m.Basic.AcademicYear, (SelectList)ViewBag.AcademicYears, "Select", new { @class = "form-select" })
                    @Html.ValidationMessageFor(m => m.Basic.AcademicYear, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-xxl col-xl-3 col-md-6">
                <div class="mb-3">
                    @Html.LabelFor(m => m.Basic.AdmsnNo, new { @class = "form-label required" })
                    @Html.TextBoxFor(m => m.Basic.AdmsnNo, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Basic.AdmsnNo, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-xxl col-xl-3 col-md-6">
                <div class="mb-3">
                    @Html.LabelFor(m => m.Basic.SrNo, new { @class = "form-label required" })
                    @Html.TextBoxFor(m => m.Basic.SrNo, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Basic.SrNo, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-xxl col-xl-3 col-md-6">
                <div class="mb-3">
                    @Html.LabelFor(m => m.Basic.AdmsnDate, new { @class = "form-label required" })
                    <div class="input-icon position-relative">
                        <span class="input-icon-addon">
                            <i class="ti ti-calendar"></i>
                        </span>
                        @Html.TextBoxFor(m => m.Basic.AdmsnDate, "{0:yyyy-MM-dd}", new { @class = "form-control datepicker" })
                    </div>
                    @Html.ValidationMessageFor(m => m.Basic.AdmsnDate, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-xxl col-xl-3 col-md-6">
                <div class="mb-3">
                    @Html.LabelFor(m => m.Basic.RollNo, new { @class = "form-label" })
                    @Html.TextBoxFor(m => m.Basic.RollNo, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Basic.RollNo, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-xxl col-xl-3 col-md-6">
                <div class="mb-3">
                    @Html.LabelFor(m => m.Basic.FirstName, "Student Name", new { @class = "form-label required" })
                    @Html.TextBoxFor(m => m.Basic.FirstName, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Basic.FirstName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-xxl col-xl-3 col-md-6">
                <div class="mb-3">
                    @Html.LabelFor(m => m.Basic.LastName, "Other Name", new { @class = "form-label" })
                    @Html.TextBoxFor(m => m.Basic.LastName, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Basic.LastName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-xxl col-xl-3 col-md-6">
                <div class="mb-3">
                    @Html.LabelFor(m => m.Basic.Class, new { @class = "form-label required" })
                    @Html.DropDownListFor(m => m.Basic.Class, (SelectList)ViewBag.Classes, "Select", new { @class = "form-select" })
                    @Html.ValidationMessageFor(m => m.Basic.Class, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-xxl col-xl-3 col-md-6">
                <div class="mb-3">
                    @Html.LabelFor(m => m.Basic.Section, new { @class = "form-label" })
                    @Html.DropDownListFor(m => m.Basic.Section, (SelectList)ViewBag.Sections, "Select", new { @class = "form-select" })
                    @Html.ValidationMessageFor(m => m.Basic.Section, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-lg-4 col-md-6">
                <div class="mb-3">
                    @Html.LabelFor(m => m.Basic.FeeCategory, new { @class = "form-label" })
                    @Html.DropDownListFor(m => m.Basic.FeeCategory, (SelectList)ViewBag.PickupPoints, "Select", new { @class = "form-select" })
                    @Html.ValidationMessageFor(m => m.Basic.FeeCategory, "", new { @class = "text-danger" })
                </div>
            </div>
            <!-- Continue with all the personal information fields -->
            <div class="col-lg-4 col-md-6">
                <div class="mb-3">
                    @Html.LabelFor(m => m.Basic.DiscountCategory, new { @class = "form-label" })
                    @Html.DropDownListFor(m => m.Basic.DiscountCategory, (SelectList)ViewBag.PickupPoints, "Select", new { @class = "form-select" })
                    @Html.ValidationMessageFor(m => m.Basic.DiscountCategory, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-lg-4 col-md-6">
                <div class="mb-3">
                    @Html.LabelFor(m => m.Basic.PickupPoint, new { @class = "form-label" })
                    @Html.DropDownListFor(m => m.Basic.PickupPoint, (SelectList)ViewBag.PickupPoints, "Select", new { @class = "form-select" })
                    @Html.ValidationMessageFor(m => m.Basic.PickupPoint, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-xxl col-xl-3 col-md-6">
                <div class="mb-3">
                    @Html.LabelFor(m => m.Basic.Gender, new { @class = "form-label required" })
                    @Html.DropDownListFor(m => m.Basic.Gender, (SelectList)ViewBag.Genders, "Select", new { @class = "form-select" })
                    @Html.ValidationMessageFor(m => m.Basic.Gender, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-xxl col-xl-3 col-md-6">
                <div class="mb-3">
                    @Html.LabelFor(m => m.Basic.DOB, new { @class = "form-label required" })
                    <div class="input-icon position-relative">
                        <span class="input-icon-addon">
                            <i class="ti ti-calendar"></i>
                        </span>
                        @Html.TextBoxFor(m => m.Basic.DOB, "{0:yyyy-MM-dd}", new { @class = "form-control datepicker" })
                    </div>
                    @Html.ValidationMessageFor(m => m.Basic.DOB, "", new { @class = "text-danger" })
                </div>
            </div>
            <!-- Rest of the personal info fields -->
        </div>
        <div class="row">
            <hr />
            <div class="card mb-12">
                <div class="card-header">
                    <h4 class="mb-0">Subject Selection</h4>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-12">
                            <div class="mb-12">
                                <div class="row">
                                    @foreach (var subject in Model.Basic.Subjects)
                                    {
                                        <div class="col-md-4 mb-2">
                                            <div class="form-check">
                                                <input type="checkbox"
                                                       class="form-check-input"
                                                       id="subject_@subject.SubjectId"
                                                       name="selectedSubjects"
                                                       value="@subject.SubjectId"
                                                       @(subject.IsSelected ? "checked" : "") />
                                                <label class="form-check-label" for="subject_@subject.SubjectId">
                                                    @subject.Name
                                                </label>
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
