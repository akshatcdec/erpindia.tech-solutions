
<style>
    .value-text {
        font-weight: bold;
    }
</style>
<div class="loading" id="loadingSpinner">
    <div class="loading-content">
        <div class="spinner-border text-primary" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
        <p class="mt-2" id="loadingMessage">Loading students data...</p>
    </div>
</div>

<!-- Validation Modal -->
<div class="modal fade" id="validationModal" tabindex="-1" aria-labelledby="validationModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="validationModalLabel">Confirmation</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>A fee concession for this student already exists. Would you like to replace it?</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="confirmSave">Yes, Replace</button>
            </div>
        </div>
    </div>
</div>

<div class="container-fluid">
    <!-- Main Content -->
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <h4 class="card-title">Student Fee Concession</h4>
                </div>
                <div class="card-body">
                    <form id="feeConcessionForm">
                        <!-- Student Selection -->
                        <div class="row mb-4">
                            <div class="col-md-12 mb-3">
                                <div class="card h-100">
                                    <div class="card-header bg-light d-flex justify-content-between align-items-center">
                                        <h5 class="mb-0">Select Student</h5>
                                    </div>
                                    <div class="card-body">
                                        <div class="mb-3">
                                            <!-- Enhanced student search container -->
                                            <div class="student-search-container">
                                                <div class="search-box">
                                                    <input type="text" class="search-input" id="studentSearchInput"
                                                           placeholder="Search by name, class, admission no...">
                                                    <button type="button" class="toggle-btn" id="dropdownToggle">▼</button>
                                                </div>
                                                <div class="results-container" id="resultsContainer">
                                                    <table class="results-table">
                                                        <thead>
                                                            <tr>
                                                                <th>Name</th>
                                                                <th>Class</th>
                                                                <th>Section</th>
                                                                <th>Admission No</th>
                                                                <th>Father's Name</th>
                                                            </tr>
                                                        </thead>
                                                        <tbody id="resultsTableBody">
                                                            <!-- Results will be populated here -->
                                                        </tbody>
                                                    </table>
                                                    <div id="noResultsMessage" class="message hidden">No students found</div>
                                                    <div id="loadingMessage" class="message hidden">Loading...</div>
                                                    <div id="errorMessage" class="message hidden">Error loading students</div>
                                                </div>
                                            </div>
                                            <input type="hidden" id="selectedStudentId" value="">
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <!-- Student Personal Information (Initially Hidden) -->
                        <div class="row mb-4" id="personalInfoCard" style="display: none;">
                            <div class="col-md-12">
                                <div class="card">
                                    <div class="card-header bg-light">
                                        <div class="d-flex align-items-center">
                                            <span class="bg-white avatar avatar-sm me-2 text-gray-7 flex-shrink-0">
                                                <i class="ti ti-info-square-rounded fs-16"></i>
                                            </span>
                                            <h5 class="text-dark">Personal Information</h5>
                                        </div>
                                    </div>
                                    <div class="card-body">
                                        <div class="row">
                                            <div class="col-md-2 text-center mb-2" id="studentPhotoContainer">
                                                <div class="profile-image d-flex align-items-center justify-content-center bg-light">
                                                    <i class="ti ti-user fs-1 text-muted"></i>
                                                </div>
                                            </div>
                                            <div class="col-md-9">
                                                <div class="row">
                                                    <div class="col-md-4 detail-row">
                                                        <div class="label-text">Admission No</div>
                                                        <div class="value-text" id="studentAdmissionNo">-</div>
                                                    </div>
                                                    <div class="col-md-4 detail-row">
                                                        <div class="label-text">Name</div>
                                                        <div class="value-text" id="studentName">-</div>
                                                    </div>
                                                    <div class="col-md-4 detail-row">
                                                        <div class="label-text">Class</div>
                                                        <div class="value-text" id="studentClass">-</div>
                                                    </div>
                                                    <div class="col-md-4 detail-row">
                                                        <div class="label-text">Section</div>
                                                        <div class="value-text" id="studentSection">-</div>
                                                    </div>
                                                    <div class="col-md-4 detail-row">
                                                        <div class="label-text">Roll No</div>
                                                        <div class="value-text" id="studentRollNo">-</div>
                                                    </div>
                                                    <div class="col-md-4 detail-row">
                                                        <div class="label-text">Father's Name</div>
                                                        <div class="value-text" id="studentFatherName">-</div>
                                                    </div>
                                                    <div class="col-md-4 detail-row">
                                                        <div class="label-text">Mobile</div>
                                                        <div class="value-text" id="studentMobile">-</div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-md-4">
                                <div class="row align-items-center">
                                    <label for="concessionAmount" class="col-sm-6 col-form-label">Enter Amount</label>
                                    <div class="col-sm-6">
                                        <input type="number" class="form-control" id="concessionAmount">
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-8">
                                <div class="row align-items-center">
                                    <label class="col-sm-3 col-form-label">Concession Mode</label>
                                    <div class="col-sm-9" id="frequencyContainer">
                                        <!-- Dynamic Concession Mode radio buttons will be filled here -->
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-sm-12">
                                <div class="row">
                                    <div class="col">
                                        <input type="text" class="form-control form-control-sm" id="txtApril" placeholder="April">
                                    </div>
                                    <div class="col">
                                        <input type="text" class="form-control form-control-sm" id="txtMay" placeholder="May">
                                    </div>
                                    <div class="col">
                                        <input type="text" class="form-control form-control-sm" id="txtJune" placeholder="June">
                                    </div>
                                    <div class="col">
                                        <input type="text" class="form-control form-control-sm" id="txtJuly" placeholder="July">
                                    </div>
                                    <div class="col">
                                        <input type="text" class="form-control form-control-sm" id="txtAugust" placeholder="August">
                                    </div>
                                    <div class="col">
                                        <input type="text" class="form-control form-control-sm" id="txtSeptember" placeholder="September">
                                    </div>
                                    <div class="col">
                                        <input type="text" class="form-control form-control-sm" id="txtOctober" placeholder="October">
                                    </div>
                                    <div class="col">
                                        <input type="text" class="form-control form-control-sm" id="txtNovember" placeholder="November">
                                    </div>
                                    <div class="col">
                                        <input type="text" class="form-control form-control-sm" id="txtDecember" placeholder="December">
                                    </div>
                                    <div class="col">
                                        <input type="text" class="form-control form-control-sm" id="txtJanuary" placeholder="January">
                                    </div>
                                    <div class="col">
                                        <input type="text" class="form-control form-control-sm" id="txtFebruary" placeholder="February">
                                    </div>
                                    <div class="col">
                                        <input type="text" class="form-control form-control-sm" id="txtMarch" placeholder="March">
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row mb-3">
                            <div class="col-12 text-end">
                                <button type="button" id="btnSave" class="btn btn-lg btn-warning">Save</button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
        <div class="col-12 mt-4">
            <div class="card">
                <div class="card-header">
                    <h4 class="card-title">Student Fee Concessions</h4>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table id="feeConcessionTable" class="table table-striped table-bordered">
                            <thead>
                                <tr>
                                    <th>ID</th>
                                    <th>Student Name</th>
                                    <th>April</th>
                                    <th>May</th>
                                    <th>June</th>
                                    <th>July</th>
                                    <th>August</th>
                                    <th>September</th>
                                    <th>October</th>
                                    <th>November</th>
                                    <th>December</th>
                                    <th>January</th>
                                    <th>February</th>
                                    <th>March</th>
                                    <th>Action</th>
                                </tr>
                            </thead>
                            <tbody>
                                <!-- Data will be loaded dynamically -->
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<style>
    /* Enhanced Student Search Styles */
    .student-search-container {
        width: 100%;
        max-width: 100%;
        margin: 0 0 15px 0;
        position: relative;
    }

    .search-box {
        display: flex;
        width: 100%;
        border: 1px solid #e2e8f0;
        border-radius: 4px;
        overflow: hidden;
    }

    .search-input {
        flex-grow: 1;
        padding: 10px 12px;
        border: none;
        outline: none;
        font-size: 14px;
    }

    .toggle-btn {
        background-color: #4a86e8;
        color: white;
        border: none;
        padding: 0 15px;
        cursor: pointer;
        transition: background-color 0.2s;
    }

        .toggle-btn:hover {
            background-color: #3a76d8;
        }

    .results-container {
        position: absolute;
        width: 100%;
        max-height: 300px;
        overflow-y: auto;
        background: white;
        border: 1px solid #e2e8f0;
        border-top: none;
        border-radius: 0 0 4px 4px;
        z-index: 100;
        display: none;
        box-shadow: 0 4px 8px rgba(0,0,0,0.1);
    }

        .results-container.active {
            display: block;
        }

    .results-table {
        width: 100%;
        border-collapse: collapse;
    }

        .results-table th {
            background-color: #f8fafc;
            position: sticky;
            top: 0;
            text-align: left;
            padding: 10px;
            font-size: 13px;
            border-bottom: 1px solid #e2e8f0;
            color: #475569;
        }

        .results-table td {
            padding: 8px 10px;
            border-bottom: 1px solid #f1f5f9;
            font-size: 14px;
        }

        .results-table tr:hover {
            background-color: #f8fafc;
            cursor: pointer;
        }

        .results-table tr:active {
            background-color: #e2e8f0;
        }

    .message {
        padding: 15px;
        text-align: center;
        color: #64748b;
        font-size: 14px;
    }

    .hidden {
        display: none;
    }

    /* Animation for results */
    @@keyframes fadeIn {
        from {
            opacity: 0;
            transform: translateY(-10px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .results-container.active {
        animation: fadeIn 0.2s ease-out;
    }
</style>
<style>
    .dataTables_wrapper {
        width: 100%;
    }

    .table-responsive {
        width: 100%;
        overflow-x: auto;
    }

    #feeConcessionTable {
        width: 100% !important;
    }

    .loading {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(255, 255, 255, 0.8);
        display: flex;
        justify-content: center;
        align-items: center;
        z-index: 9999;
    }

    .loading-content {
        text-align: center;
        background: white;
        padding: 20px;
        border-radius: 5px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    }

    .label-text {
        font-size: 0.85rem;
        color: #6c757d;
        margin-bottom: 2px;
    }

    .value-text {
        font-weight: 500;
    }
</style>

<script>
    var studentsData = [];
var existingFeeDiscounts = []; // Store existing configurations for validation
var tenantId = '@Session["TenantID"]'; // Get tenant ID from session

// Hardcoded frequency data
var frequencyData = [
    { id: "0", name: "NA" },
    { id: "Monthly", name: "Monthly" },
    { id: "Quarterly", name: "Quarterly" },
    { id: "Annually", name: "Annually" }
];

// Bootstrap modal instance
var validationModal;

$(document).ready(function () {
    // Initialize Bootstrap modal
    validationModal = new bootstrap.Modal(document.getElementById('validationModal'));

    // Update modal title and message to reflect discounts instead of concessions
    $('#validationModalLabel').text('Confirmation');
    $('.modal-body p').text('A fee discount for this student already exists. Would you like to replace it?');
    $('#confirmSave').text('Yes, Replace');

    // Update UI elements to use "discount" terminology
    $('.card-title').each(function() {
        var text = $(this).text();
        $(this).text(text.replace('Concession', 'Discount'));
    });

    // Initialize DataTable with proper column definitions
    $('#feeConcessionTable').DataTable({
        processing: true,
        serverSide: false,
        data: [], // Start with empty data
        columns: [
            { data: "Id", visible: false },
            { data: "StudentName" },
            {
                data: "April",
                render: function (data) {
                    return data ;
                }
            },
            {
                data: "May",
                render: function (data) {
                    return data ;
                }
            },
            {
                data: "June",
                render: function (data) {
                    return data ;
                }
            },
            {
                data: "July",
                render: function (data) {
                    return data ;
                }
            },
            {
                data: "August",
                render: function (data) {
                    return data ;
                }
            },
            {
                data: "September",
                render: function (data) {
                    return data ;
                }
            },
            {
                data: "October",
                render: function (data) {
                    return data ;
                }
            },
            {
                data: "November",
                render: function (data) {
                    return data ;
                }
            },
            {
                data: "December",
                render: function (data) {
                    return data ;
                }
            },
            {
                data: "January",
                render: function (data) {
                    return data ;
                }
            },
            {
                data: "February",
                render: function (data) {
                    return data ;
                }
            },
            {
                data: "March",
                render: function (data) {
                    return data ;
                }
            },
            {
                data: null,
                orderable: false,
                className: "text-center",
                render: function (data, type, row) {
                    return '<button class="btn btn-danger btn-sm delete-discount" data-id="' + row.Id + '"><i class="fa fa-trash"></i></button>';
                }
            }
        ],
        scrollX: true,
        autoWidth: true,
        responsive: true,
        language: {
            emptyTable: "No fee discount records found"
        },
        dom: '<"row"<"col-sm-12 col-md-6"l><"col-sm-12 col-md-6"f>><"row"<"col-sm-12"tr>><"row"<"col-sm-12 col-md-5"i><"col-sm-12 col-md-7"p>>',
        lengthMenu: [[10, 25, 50, -1], [10, 25, 50, "All"]]
    });

    // Load students data from the server
    loadStudentsData();
    loadFeeDiscountData();
    loadFrequencies();

    // Set up event handlers
    $(document).on('change', 'input[name="frequency"]', updateDiscounts);
    $('#concessionAmount').on('input', updateDiscounts);

    // Update tooltip/placeholder to indicate percentage
    $('#concessionAmount').attr('placeholder', 'Discount ');
    $('label[for="concessionAmount"]').text('Enter Discount');

    // Save button click handler
    $('#btnSave').click(function () {
        validateAndSave();
    });

    // Confirm save button click handler
    $('#confirmSave').click(function () {
        validationModal.hide();
        saveFeeDiscount(true); // true indicates forced save (override existing)
    });

    // Delete discount handler
    $(document).on('click', '.delete-discount', function() {
        var discountId = $(this).data('id');
        if (confirm('Are you sure you want to delete this fee discount?')) {
            deleteFeeDiscount(discountId);
        }
    });
});

// Load students data from the server
function loadStudentsData() {
    // Show loading spinner
    $('#loadingSpinner').show();
    $('#loadingMessage').text('Loading students data...');

    // Make AJAX request to get students data
    $.ajax({
        url: '@Url.Action("GetStudents", "studconc")',
        type: 'GET',
        data: { tenantId: tenantId },
        dataType: 'json',
        success: function (response) {
            if (response.error) {
                console.error('Error from server:', response.error);
                alert('Failed to load students data: ' + response.error);
                $('#loadingSpinner').hide();
                return;
            }

            // Process students data
            studentsData = response.map(student => ({
                id: student.Id,
                name: student.Name,
                class: student.Class,
                section: student.Section
            }));

            // Hide loading spinner
            $('#loadingSpinner').hide();
        },
        error: function (xhr, status, error) {
            console.error('Error loading students data:', error);
            alert('Failed to load students data. Please refresh the page and try again.');

            // Hide loading spinner
            $('#loadingSpinner').hide();
        }
    });
}

function loadFrequencies() {
    let html = '';
    frequencyData.forEach((item, index) => {
        html += `
            <div class="form-check form-check-inline">
                <input class="form-check-input" type="radio" name="frequency" id="freq${item.id}" value="${item.id}" ${index === 0 ? 'checked' : ''}>
                <label class="form-check-label" for="freq${item.id}">${item.name}</label>
            </div>`;
    });
    $('#frequencyContainer').html(html);
}

function updateDiscounts() {
    var frequency = $('input[name="frequency"]:checked').val();
    var amount = parseFloat($('#concessionAmount').val());

    // Clear all text boxes
    clearTextBoxes();

    if (frequency === "0") {
        return;
    }
    if (isNaN(amount)) {
        return;
    }


    var monthIds = [
        'txtApril',
        'txtMay',
        'txtJune',
        'txtJuly',
        'txtAugust',
        'txtSeptember',
        'txtOctober',
        'txtNovember',
        'txtDecember',
        'txtJanuary',
        'txtFebruary',
        'txtMarch'
    ];

    if (frequency === "Monthly") {
        for (var i = 0; i < monthIds.length; i++) {
            $('#' + monthIds[i]).val(amount.toFixed(2));
        }
    } else if (frequency === "Quarterly") {
        var quarterlyMonths = [0, 3, 6, 9]; // Indices for April, July, October, January
        for (var i = 0; i < quarterlyMonths.length; i++) {
            $('#' + monthIds[quarterlyMonths[i]]).val(amount.toFixed(2));
        }
    } else if (frequency === "Annually") {
        $('#' + monthIds[0]).val(amount.toFixed(2)); // April
    }
}

function clearTextBoxes() {
    var monthIds = [
        'txtApril',
        'txtMay',
        'txtJune',
        'txtJuly',
        'txtAugust',
        'txtSeptember',
        'txtOctober',
        'txtNovember',
        'txtDecember',
        'txtJanuary',
        'txtFebruary',
        'txtMarch'
    ];

    for (var i = 0; i < monthIds.length; i++) {
        $('#' + monthIds[i]).val('0'); // Default to 100% (no discount)
    }
}

function loadFeeDiscountData() {
    // Show loading indicator
    $('#loadingSpinner').show();
    $('#loadingMessage').text('Loading fee discount data...');

    // AJAX call to retrieve fee discount data
    $.ajax({
        url: '@Url.Action("GetStudentFeeDiscountList", "studconc")',
        type: 'GET',
        data: {
            tenantId: tenantId
        },
        dataType: 'json',
        success: function(response) {
            // Hide loading spinner
            $('#loadingSpinner').hide();

            if (response.error) {
                console.error('Error loading fee discount data:', response.error);
                alert('Failed to load fee discount data: ' + response.error);
                return;
            }

            // Store existing discounts for validation
            existingFeeDiscounts = response;

            // Get DataTable instance
            var table = $('#feeConcessionTable').DataTable();

            // Clear existing data
            table.clear();

            // Add data to the table
            if (Array.isArray(response) && response.length > 0) {
                table.rows.add(response).draw();
            } else {
                // Just redraw the table if empty
                table.draw();
            }
        },
        error: function(xhr, status, error) {
            // Hide loading spinner
            $('#loadingSpinner').hide();
            console.error('Error loading fee discount data:', error);
            alert('Failed to load fee discount data. Please try again.');
        }
    });
}

// Validate selections before saving
function validateAndSave() {
    // Basic form validation
    var studentId = $('#selectedStudentId').val();
    var frequency = $('input[name="frequency"]:checked').val();
    var amount = $('#concessionAmount').val();

    // Check if student is selected
    if (!studentId || studentId.trim() === '') {
        alert('Please select a student from the search results');
        $('#studentSearchInput').focus();
        return false;
    }

    // Check if amount is valid
    if (!amount || amount.trim() === '' || isNaN(parseFloat(amount))) {
        alert('Please enter a valid discount percentage');
        $('#concessionAmount').focus();
        return false;
    }

    // Check if percentage is between 0 and 100
    // Check if there's already a discount for this student
    var hasExistingDiscount = existingFeeDiscounts.some(discount =>
        discount.StudentID === studentId
    );

    if (hasExistingDiscount) {
        // Show confirmation modal
        validationModal.show();
    } else {
        // Save directly if no existing discount
        saveFeeDiscount(false);
    }

    return true;
}

function saveFeeDiscount(forceOverride) {
    // Collect form data
    var studentId = $('#selectedStudentId').val();

    // Double check student ID is available
    if (!studentId || studentId.trim() === '') {
        alert('Error: No student selected. Please select a student from the search results.');
        return false;
    }

    var student = studentsData.find(s => s.id === studentId);

    // Additional check that we found the student in our data
    if (!student) {
        alert('Error: Selected student information not found. Please try selecting the student again.');
        return false;
    }

    var formData = {
        tenantId: tenantId,
        studentId: studentId,
        studentName: student.name,
        class: student.class || '',
        section: student.section || '',
        frequency: $('input[name="frequency"]:checked').val(), // Keep for backward compatibility
        amount: $('#concessionAmount').val(), // Keep for backward compatibility
        forceOverride: forceOverride,
        months: {
            April: $('#txtApril').val() || '100',
            May: $('#txtMay').val() || '100',
            June: $('#txtJune').val() || '100',
            July: $('#txtJuly').val() || '100',
            August: $('#txtAugust').val() || '100',
            September: $('#txtSeptember').val() || '100',
            October: $('#txtOctober').val() || '100',
            November: $('#txtNovember').val() || '100',
            December: $('#txtDecember').val() || '100',
            January: $('#txtJanuary').val() || '100',
            February: $('#txtFebruary').val() || '100',
            March: $('#txtMarch').val() || '100'
        }
    };

    // Show loading spinner
    $('#loadingSpinner').show();
    $('#loadingMessage').text('Saving fee discount...');

    // Send Ajax request
    $.ajax({
        url: '@Url.Action("SaveStudentFeeDiscount", "studconc")',
        type: 'POST',
        contentType: 'application/json',
        data: JSON.stringify(formData),
        success: function (response) {
            // Hide loading spinner
            $('#loadingSpinner').hide();

            if (response.success) {
                alert('Fee discount saved successfully!');
                // Reload fee discount data
                loadFeeDiscountData();
                // Clear form
                clearForm();
            } else {
                alert('Error saving fee discount: ' + response.message);
            }
        },
        error: function (xhr, status, error) {
            // Hide loading spinner
            $('#loadingSpinner').hide();
            alert('Error saving fee discount: ' + error);
        }
    });

    return true;
}

function clearForm() {
    // 1. Clear student search and selection
    $('#studentSearchInput').val('');
    $('#selectedStudentId').val('');

    // 2. Hide personal info card and reset its content
    $('#personalInfoCard').hide();
    $('#studentName').text('-');
    $('#studentAdmissionNo').text('-');
    $('#studentClass').text('-');
    $('#studentSection').text('-');
    $('#studentRollNo').text('-');
    $('#studentFatherName').text('-');
    $('#studentMobile').text('-');

    // 3. Reset other form fields
    $('#concessionAmount').val(''); // Clear the amount input

    // 4. Reset frequency selection
    $('input[name="frequency"]').prop('checked', false); // Uncheck all first
    $('input[name="frequency"][value="0"]').prop('checked', true); // Then select the NA option

    // 5. Reset all month fields to default value (100% - no discount)
    var monthIds = [
        'txtApril',
        'txtMay',
        'txtJune',
        'txtJuly',
        'txtAugust',
        'txtSeptember',
        'txtOctober',
        'txtNovember',
        'txtDecember',
        'txtJanuary',
        'txtFebruary',
        'txtMarch'
    ];

    // Set each field to 100 (default - no discount)
    for (var i = 0; i < monthIds.length; i++) {
        $('#' + monthIds[i]).val('100');
    }

    // 6. Remove any validation errors
    $('#studentSearchInput').removeClass('is-invalid');
    $('#studentSearchError').remove();
    $('.search-box').removeClass('has-error');

    // 7. Clear any dropdown results that might be showing
    $('#resultsContainer').removeClass('active');
    $('#dropdownToggle').text('▼');

    console.log('Form has been completely reset');
}

function deleteFeeDiscount(discountId) {
    // Show loading spinner
    $('#loadingSpinner').show();
    $('#loadingMessage').text('Deleting fee discount...');

    $.ajax({
        url: '@Url.Action("DeleteStudentFeeDiscount", "studconc")',
        type: 'POST',
        data: {
            id: discountId,
            tenantId: tenantId
        },
        success: function(response) {
            // Hide loading spinner
            $('#loadingSpinner').hide();

            if (response.success) {
                alert('Fee discount deleted successfully!');
                // Reload the data table to reflect the changes
                loadFeeDiscountData();
            } else {
                alert('Error deleting fee discount: ' + response.message);
            }
        },
        error: function(xhr, status, error) {
            // Hide loading spinner
            $('#loadingSpinner').hide();
            alert('Error deleting fee discount: ' + error);
        }
    });
}

function loadStudentDetails(studentId) {
    // Show loading spinner
    $('#loadingSpinner').show();
    $('#loadingMessage').text('Loading student details...');

    // Make AJAX request to get student details
    $.ajax({
        url: '@Url.Action("GetStudentDetails", "studconc")',
        type: 'GET',
        data: {
            studentId: studentId,
            tenantId: tenantId
        },
        dataType: 'json',
        success: function(response) {
            // Hide loading spinner
            $('#loadingSpinner').hide();

            if (response.error) {
                console.error('Error loading student details:', response.error);
                alert('Failed to load student details: ' + response.error);
                return;
            }

            // Populate student details
            $('#studentName').text(response.FirstName + ' ' + (response.LastName || ''));
            $('#studentAdmissionNo').text(response.AdmsnNo || '-');
            $('#studentClass').text(response.Class || '-');
            $('#studentSection').text(response.Section || '-');
            $('#studentRollNo').text(response.RollNo || '-');
            $('#studentFatherName').text(response.FatherName || '-');
            $('#studentMobile').text(response.Mobile || '-');

            // Show personal info card
            $('#personalInfoCard').show();
        },
        error: function(xhr, status, error) {
            // Hide loading spinner
            $('#loadingSpinner').hide();
            console.error('Error loading student details:', error);
            alert('Failed to load student details. Please try again.');
        }
    });
}

// Enhanced student search handling
    $(document).ready(function () {
        // Set up the student search functionality
        const searchInput = $('#studentSearchInput');
        const resultsContainer = $('#resultsContainer');
        const resultsBody = $('#resultsTableBody');
        const toggleBtn = $('#dropdownToggle');
        const noResultsMsg = $('#noResultsMessage');
        const loadingMsg = $('#loadingMessage');
        const errorMsg = $('#errorMessage');

        // Function to show/hide messages
        function showMessage(messageEl) {
            // Hide all messages
            noResultsMsg.addClass('hidden');
            loadingMsg.addClass('hidden');
            errorMsg.addClass('hidden');

            // Show the specific message
            if (messageEl) {
                messageEl.removeClass('hidden');
            }
        }

        // Function to filter and display students
        function filterStudents(searchTerm) {
            searchTerm = searchTerm.toLowerCase().trim();

            if (searchTerm.length < 1) {
                resultsContainer.removeClass('active');
                return;
            }

            // Show loading message
            showMessage(loadingMsg);
            resultsContainer.addClass('active');

            // Filter students based on search term
            const filteredStudents = studentsData.filter(student =>
                (student.name && student.name.toLowerCase().includes(searchTerm)) ||
                (student.id && student.id.toString().includes(searchTerm)) ||
                (student.class && student.class.toLowerCase().includes(searchTerm)) ||
                (student.section && student.section.toLowerCase().includes(searchTerm))
            );

            // Clear previous results
            resultsBody.empty();

            // Display results (limit to 10)
            if (filteredStudents.length > 0) {
                const limitedResults = filteredStudents.slice(0, 10);

                limitedResults.forEach(student => {
                    const row = $('<tr>').attr('data-id', student.id);
                    row.append($('<td>').text(student.name || '-'));
                    row.append($('<td>').text(student.class || '-'));
                    row.append($('<td>').text(student.section || '-'));
                    row.append($('<td>').text(student.admsnNo || '-'));
                    // Assuming father's name might be available in your student data
                    row.append($('<td>').text(student.fatherName || '-'));

                    resultsBody.append(row);
                });

                showMessage(null);
            } else {
                showMessage(noResultsMsg);
            }
        }

        // Toggle dropdown when clicking the toggle button
        toggleBtn.on('click', function () {
            if (resultsContainer.hasClass('active')) {
                resultsContainer.removeClass('active');
                toggleBtn.text('▼');
            } else {
                filterStudents(searchInput.val());
                toggleBtn.text('▲');
            }
        });

        // Search as you type
        searchInput.on('input', function () {
            const searchTerm = $(this).val().trim();

            if (searchTerm.length >= 1) {
                filterStudents(searchTerm);
                toggleBtn.text('▲');
            } else {
                resultsContainer.removeClass('active');
                toggleBtn.text('▼');
            }
        });

        // Handle clicking on a student result
        $(document).on('click', '#resultsTableBody tr', function () {
            const studentId = $(this).data('id');
            const selectedStudent = studentsData.find(s => s.id === studentId);

            // Set the selected student id to hidden field
            $('#selectedStudentId').val(studentId);

            // Update the search input with the selected student name
            searchInput.val(selectedStudent.name);

            // Hide results
            resultsContainer.removeClass('active');
            toggleBtn.text('▼');

            // Load student details
            loadStudentDetails(studentId);
        });

        // Close dropdown when clicking outside
        $(document).on('click', function (e) {
            if (!$(e.target).closest('.student-search-container').length) {
                resultsContainer.removeClass('active');
                toggleBtn.text('▼');
            }
        });
    });
</script>
<script>
    $(document).ready(function () {
        // Variables for keyboard navigation
        let currentIndex = -1;
        const searchInput = $('#studentSearchInput');
        const resultsContainer = $('#resultsContainer');

        // Add keyboard event listener to the search input
        searchInput.on('keydown', function (e) {
            const rows = $('#resultsTableBody tr');
            const rowCount = rows.length;

            // Only handle keyboard navigation if results are visible
            if (!resultsContainer.hasClass('active') || rowCount === 0) {
                currentIndex = -1;
                return;
            }

            // Handle arrow keys and enter
            switch (e.key) {
                case 'ArrowDown':
                    e.preventDefault(); // Prevent cursor movement in input

                    // Move selection down or loop to first item
                    if (currentIndex < rowCount - 1) {
                        currentIndex++;
                    } else {
                        currentIndex = 0;
                    }

                    // Update visual selection
                    updateSelection(rows);
                    break;

                case 'ArrowUp':
                    e.preventDefault(); // Prevent cursor movement in input

                    // Move selection up or loop to last item
                    if (currentIndex > 0) {
                        currentIndex--;
                    } else {
                        currentIndex = rowCount - 1;
                    }

                    // Update visual selection
                    updateSelection(rows);
                    break;

                case 'Enter':
                    e.preventDefault(); // Prevent form submission

                    // If an item is selected, trigger click on it
                    if (currentIndex >= 0 && currentIndex < rowCount) {
                        $(rows[currentIndex]).click();
                    }
                    break;

                case 'Escape':
                    // Hide results
                    resultsContainer.removeClass('active');
                    $('#dropdownToggle').text('▼');
                    currentIndex = -1;
                    break;
            }
        });

        // Function to update the visual selection indicator
        function updateSelection(rows) {
            // Remove selection from all rows
            rows.removeClass('selected-row');

            // Add selection to current row
            if (currentIndex >= 0) {
                $(rows[currentIndex]).addClass('selected-row');

                // Scroll to ensure selected row is visible
                const selectedRow = $(rows[currentIndex]);
                const container = resultsContainer;

                const rowTop = selectedRow.position().top;
                const rowBottom = rowTop + selectedRow.outerHeight();
                const containerTop = 0;
                const containerBottom = container.height();

                if (rowTop < containerTop) {
                    container.scrollTop(container.scrollTop() + rowTop - containerTop);
                } else if (rowBottom > containerBottom) {
                    container.scrollTop(container.scrollTop() + rowBottom - containerBottom);
                }
            }
        }

        // Reset selection when search input changes
        searchInput.on('input', function () {
            currentIndex = -1;
        });

        // Reset selection when results container is shown/hidden
        $('#dropdownToggle').on('click', function () {
            currentIndex = -1;
        });

        // Add CSS for selected row styling
        $('<style>').text(`
        .results-table tr.selected-row {
            background-color: #e2f0fd !important;
            border-left: 3px solid #4a86e8;
        }

        .results-table tr.selected-row:hover {
            background-color: #d0e7fb !important;
        }
    `).appendTo('head');
    });
</script>