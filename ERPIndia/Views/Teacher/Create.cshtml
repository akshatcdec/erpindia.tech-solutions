@model ERPIndia.TeacherManagement.Models.TeacherViewModel
@{
    ViewBag.Title = "Add Employee";
}

<style>
    .frames {
        background-color: #f8f9fa;
        cursor: pointer;
        min-height: 120px;
    }

        .frames:hover {
            background-color: #e9ecef;
        }

    .profile-upload {
        flex: 1;
    }

    .drag-upload-btn {
        position: relative;
        display: inline-block;
        cursor: pointer;
        background-color: #4a86e8;
        color: white;
        padding: 8px 16px;
        border-radius: 4px;
    }

        .drag-upload-btn input[type="file"] {
            position: absolute;
            left: 0;
            top: 0;
            opacity: 0;
            width: 100%;
            height: 100%;
            cursor: pointer;
        }

    .bootstrap-tagsinput {
        width: 100%;
        border: 1px solid #ced4da;
        border-radius: 0.25rem;
        padding: 0.375rem 0.75rem;
        min-height: 38px;
    }

        .bootstrap-tagsinput .tag {
            background-color: #007bff;
            color: white;
            padding: 2px 8px;
            margin: 2px;
            border-radius: 3px;
            display: inline-block;
        }

            .bootstrap-tagsinput .tag [data-role="remove"] {
                margin-left: 5px;
                cursor: pointer;
            }

                .bootstrap-tagsinput .tag [data-role="remove"]:after {
                    content: "×";
                    padding: 0px 2px;
                    color: white;
                    font-weight: bold;
                }

        .bootstrap-tagsinput input {
            border: none;
            box-shadow: none;
            outline: none;
            background-color: transparent;
            padding: 0;
            margin: 0;
            width: auto !important;
            max-width: inherit;
        }

    .required:after {
        content: " *";
        color: red;
    }

    .input-icon {
        position: relative;
    }

    .input-icon-addon {
        position: absolute;
        right: 10px;
        top: 50%;
        transform: translateY(-50%);
        pointer-events: none;
        color: #6c757d;
    }

    .form-control.datetimepicker {
        padding-right: 35px;
    }

    .avatar {
        display: inline-flex;
        align-items: center;
        justify-content: center;
    }

    .avatar-sm {
        width: 32px;
        height: 32px;
    }

    .avatar-xxl {
        width: 120px;
        height: 120px;
    }

    .fs-16 {
        font-size: 16px;
    }

    .fs-12 {
        font-size: 12px;
    }
</style>

<div class="content content-two">
    <div class="row">
        <div class="col-md-12">
            @using (Html.BeginForm("Create", "Teacher", FormMethod.Post, new { enctype = "multipart/form-data", id = "employeeForm" }))
            {
                @Html.AntiForgeryToken()

                <!-- Validation Summary -->
                if (!ViewData.ModelState.IsValid)
                {
                    <div class="alert alert-danger mb-4">
                        @Html.ValidationSummary(false, "Please fix the following errors:", new { @class = "mb-0" })
                    </div>
                }

                <!-- Academic Details -->
                <div class="card">
                    <div class="card-header bg-light">
                        <div class="d-flex align-items-center">
                            <span class="bg-white avatar avatar-sm me-2 text-gray-7 flex-shrink-0">
                                <i class="ti ti-school fs-16"></i>
                            </span>
                            <h4 class="text-dark">Academic Details</h4>
                        </div>
                    </div>
                    <div class="card-body pb-1">
                        <div class="row">
                            <div class="col-md-4">
                                <div class="mb-3">
                                    <label class="form-label">Employee ID (Auto Generate)</label>
                                    @Html.TextBoxFor(m => m.Basic.TeacherCode, new { @class = "form-control", @readonly = "readonly", placeholder = "Auto-generated" })
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="mb-3">
                                    <label class="form-label required">Designation</label>
                                    <select class="form-select select2" name="Designation">
                                        <option value="">Select Designation</option>
                                        <option value="Principal">Principal</option>
                                        <option value="Vice Principal">Vice Principal</option>
                                        <option value="Teacher">Teacher</option>
                                        <option value="Assistant Teacher">Assistant Teacher</option>
                                        <option value="Lab Assistant">Lab Assistant</option>
                                        <option value="Librarian">Librarian</option>
                                    </select>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="mb-3">
                                    @Html.LabelFor(m => m.Basic.DateOfJoining, "Joining Date", new { @class = "form-label required" })
                                    <div class="input-icon position-relative">
                                        <span class="input-icon-addon">
                                            <i class="ti ti-calendar"></i>
                                        </span>
                                        @Html.TextBoxFor(m => m.Basic.DateOfJoining, new { @class = "form-control datetimepicker", placeholder = "DD/MM/YYYY" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="mb-3">
                                    @Html.LabelFor(m => m.Basic.Qualification, "Qualification", new { @class = "form-label required" })
                                    @Html.TextBoxFor(m => m.Basic.Qualification, new { @class = "form-control", maxlength = "100", placeholder = "e.g., B.Ed, M.A." })
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="mb-3">
                                    @Html.LabelFor(m => m.Basic.WorkExperience, "Work Experience", new { @class = "form-label required" })
                                    @Html.TextBoxFor(m => m.Basic.WorkExperience, new { @class = "form-control", maxlength = "50", placeholder = "e.g., 5 Years" })
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="mb-3">
                                    <label class="form-label">Experience Details</label>
                                    <input type="text" class="form-control" name="ExperienceDetails" maxlength="200" placeholder="Previous experience details" />
                                </div>
                            </div>
                            <div class="col-md-12">
                                <div class="mb-3">
                                    <label class="form-label">Note</label>
                                    @Html.TextAreaFor(m => m.Basic.Notes, new { @class = "form-control", placeholder = "Additional notes about academic background", rows = "3", maxlength = "500" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <!-- /Academic Details -->

                <!-- Employee Details -->
                <div class="card">
                    <div class="card-header bg-light">
                        <div class="d-flex align-items-center">
                            <span class="bg-white avatar avatar-sm me-2 text-gray-7 flex-shrink-0">
                                <i class="ti ti-user fs-16"></i>
                            </span>
                            <h4 class="text-dark">Employee Details</h4>
                        </div>
                    </div>
                    <div class="card-body pb-1">
                        <!-- Photo Upload Section -->
                        <div class="row">
                            <div class="col-md-12">
                                <div class="mb-3">
                                    <label class="form-label">Photo</label>
                                    <div class="d-flex align-items-center flex-wrap row-gap-3">
                                        <div class="d-flex align-items-center justify-content-center avatar avatar-xxl border border-dashed me-2 flex-shrink-0 text-dark frames" id="photoPreview">
                                            <i class="ti ti-photo-plus fs-16"></i>
                                        </div>
                                        <div class="profile-upload">
                                            <div class="profile-uploader d-flex align-items-center">
                                                <div class="drag-upload-btn mb-3">
                                                    Upload
                                                    <input type="file" name="photoFile" id="photoFile" class="form-control image-sign" accept="image/*">
                                                </div>
                                                <a href="javascript:void(0);" class="btn btn-primary mb-3 ms-2" id="removePhotoBtn">Remove</a>
                                            </div>
                                            <p class="fs-12">Upload image size 4MB, Format JPG, PNG, SVG</p>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-4">
                                <div class="mb-3">
                                    <label class="form-label required">Employee Name</label>
                                    <input type="text" class="form-control" name="EmployeeName" maxlength="100" placeholder="Enter full name" required />
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="mb-3">
                                    @Html.LabelFor(m => m.Basic.FatherName, "Father's Name", new { @class = "form-label required" })
                                    @Html.TextBoxFor(m => m.Basic.FatherName, new { @class = "form-control", maxlength = "50", placeholder = "Enter father's name" })
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="mb-3">
                                    @Html.LabelFor(m => m.Basic.MotherName, "Mother's Name", new { @class = "form-label required" })
                                    @Html.TextBoxFor(m => m.Basic.MotherName, new { @class = "form-control", maxlength = "50", placeholder = "Enter mother's name" })
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="mb-3">
                                    @Html.LabelFor(m => m.Basic.Gender, "Gender", new { @class = "form-label required" })
                                    @Html.DropDownListFor(m => m.Basic.Gender, Model.Basic.GenderList, "Select", new { @class = "form-select select2" })
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="mb-3">
                                    <label class="form-label required">Religion</label>
                                    <select class="form-select select2" name="Religion">
                                        <option value="">Select Religion</option>
                                        <option value="Hindu">Hindu</option>
                                        <option value="Muslim">Muslim</option>
                                        <option value="Christian">Christian</option>
                                        <option value="Sikh">Sikh</option>
                                        <option value="Buddhist">Buddhist</option>
                                        <option value="Jain">Jain</option>
                                        <option value="Other">Other</option>
                                    </select>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="mb-3">
                                    @Html.LabelFor(m => m.Basic.BloodGroup, "Blood Group", new { @class = "form-label" })
                                    @Html.DropDownListFor(m => m.Basic.BloodGroup, Model.Basic.BloodGroupList, "Select", new { @class = "form-select select2" })
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="mb-3">
                                    @Html.LabelFor(m => m.Basic.DateOfBirth, "Date of Birth", new { @class = "form-label" })
                                    <div class="input-icon position-relative">
                                        <span class="input-icon-addon">
                                            <i class="ti ti-calendar"></i>
                                        </span>
                                        @Html.TextBoxFor(m => m.Basic.DateOfBirth, new { @class = "form-control datetimepicker", placeholder = "DD/MM/YYYY" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="mb-3">
                                    @Html.LabelFor(m => m.Basic.MaritalStatus, "Marital Status", new { @class = "form-label required" })
                                    @Html.DropDownListFor(m => m.Basic.MaritalStatus, Model.Basic.MaritalStatusList, "Select", new { @class = "form-select select2" })
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="mb-3">
                                    @Html.LabelFor(m => m.Basic.PrimaryContactNumber, "Mobile No", new { @class = "form-label required" })
                                    @Html.TextBoxFor(m => m.Basic.PrimaryContactNumber, new { @class = "form-control numeric-only", maxlength = "10", placeholder = "10-digit mobile" })
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="mb-3">
                                    @Html.LabelFor(m => m.Basic.PANNumber, "PAN No. / Other ID", new { @class = "form-label" })
                                    @Html.TextBoxFor(m => m.Basic.PANNumber, new { @class = "form-control", maxlength = "20", placeholder = "PAN or ID number" })
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="mb-3">
                                    <label class="form-label">Aadhar No.</label>
                                    <input type="text" class="form-control numeric-only" name="AadharNo" maxlength="12" placeholder="12-digit Aadhar" />
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="mb-3">
                                    @Html.LabelFor(m => m.Basic.Email, "Email", new { @class = "form-label" })
                                    @Html.TextBoxFor(m => m.Basic.Email, new { @class = "form-control", type = "email", maxlength = "100", placeholder = "employee@example.com" })
                                </div>
                            </div>
                            <div class="col-md-12">
                                <div class="mb-3">
                                    @Html.LabelFor(m => m.Basic.CurrentAddress, "Address", new { @class = "form-label required" })
                                    @Html.TextAreaFor(m => m.Basic.CurrentAddress, new { @class = "form-control", rows = "2", maxlength = "200", placeholder = "Complete address" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <!-- /Employee Details -->

                <!-- Payroll -->
                <div class="card">
                    <div class="card-header bg-light">
                        <div class="d-flex align-items-center">
                            <span class="bg-white avatar avatar-sm me-2 text-gray-7 flex-shrink-0">
                                <i class="ti ti-cash fs-16"></i>
                            </span>
                            <h4 class="text-dark">Payroll</h4>
                        </div>
                    </div>
                    <div class="card-body pb-1">
                        <div class="row">
                            <div class="col-md-4">
                                <div class="mb-3">
                                    @Html.LabelFor(m => m.Payroll.BasicSalary, "Salary", new { @class = "form-label required" })
                                    @Html.TextBoxFor(m => m.Payroll.BasicSalary, new { @class = "form-control", type = "number", step = "0.01", placeholder = "0.00" })
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="mb-3">
                                    <label class="form-label">Late Fine (Per Hour)</label>
                                    <input type="number" class="form-control" name="LateFinePerHour" step="0.01" placeholder="0.00" />
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="mb-3">
                                    <label class="form-label required">Time-in</label>
                                    <input type="time" class="form-control" name="TimeIn" value="09:00" />
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="mb-3">
                                    <label class="form-label required">Time-Out</label>
                                    <input type="time" class="form-control" name="TimeOut" value="17:00" />
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="mb-3">
                                    @Html.LabelFor(m => m.Payroll.DateOfLeaving, "Date of Leaving", new { @class = "form-label" })
                                    <div class="input-icon position-relative">
                                        <span class="input-icon-addon">
                                            <i class="ti ti-calendar"></i>
                                        </span>
                                        @Html.TextBoxFor(m => m.Payroll.DateOfLeaving, new { @class = "form-control datetimepicker", placeholder = "DD/MM/YYYY" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-12">
                                <div class="mb-3">
                                    <label class="form-label">Note</label>
                                    <textarea class="form-control" name="PayrollNote" rows="3" maxlength="500" placeholder="Additional payroll notes"></textarea>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <!-- /Payroll -->

                <!-- Leaves -->
                <div class="card">
                    <div class="card-header bg-light">
                        <div class="d-flex align-items-center">
                            <span class="bg-white avatar avatar-sm me-2 text-gray-7 flex-shrink-0">
                                <i class="ti ti-calendar-off fs-16"></i>
                            </span>
                            <h4 class="text-dark">Leaves</h4>
                        </div>
                    </div>
                    <div class="card-body pb-1">
                        <div class="row">
                            <div class="col-md-3">
                                <div class="mb-3">
                                    @Html.LabelFor(m => m.Leaves.MedicalLeaves, "Medical Leaves", new { @class = "form-label" })
                                    @Html.TextBoxFor(m => m.Leaves.MedicalLeaves, new { @class = "form-control numeric-only", placeholder = "0", Value = "0" })
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="mb-3">
                                    @Html.LabelFor(m => m.Leaves.CasualLeaves, "Casual Leaves", new { @class = "form-label" })
                                    @Html.TextBoxFor(m => m.Leaves.CasualLeaves, new { @class = "form-control numeric-only", placeholder = "0", Value = "0" })
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="mb-3">
                                    @Html.LabelFor(m => m.Leaves.MaternityLeaves, "Maternity Leaves", new { @class = "form-label" })
                                    @Html.TextBoxFor(m => m.Leaves.MaternityLeaves, new { @class = "form-control numeric-only", placeholder = "0", Value = "0" })
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="mb-3">
                                    @Html.LabelFor(m => m.Leaves.SickLeaves, "Sick Leaves", new { @class = "form-label" })
                                    @Html.TextBoxFor(m => m.Leaves.SickLeaves, new { @class = "form-control numeric-only", placeholder = "0", Value = "0" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <!-- /Leaves -->

                <!-- Social Links -->
                <div class="card">
                    <div class="card-header bg-light">
                        <div class="d-flex align-items-center">
                            <span class="bg-white avatar avatar-sm me-2 text-gray-7 flex-shrink-0">
                                <i class="ti ti-brand-facebook fs-16"></i>
                            </span>
                            <h4 class="text-dark">Social Links</h4>
                        </div>
                    </div>
                    <div class="card-body pb-1">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    @Html.LabelFor(m => m.SocialMedia.Facebook, "Facebook", new { @class = "form-label" })
                                    @Html.TextBoxFor(m => m.SocialMedia.Facebook, new { @class = "form-control", maxlength = "200", placeholder = "https://facebook.com/username" })
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    @Html.LabelFor(m => m.SocialMedia.Twitter, "Twitter", new { @class = "form-label" })
                                    @Html.TextBoxFor(m => m.SocialMedia.Twitter, new { @class = "form-control", maxlength = "200", placeholder = "https://twitter.com/username" })
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    @Html.LabelFor(m => m.SocialMedia.Instagram, "Instagram", new { @class = "form-label" })
                                    @Html.TextBoxFor(m => m.SocialMedia.Instagram, new { @class = "form-control", maxlength = "200", placeholder = "https://instagram.com/username" })
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    @Html.LabelFor(m => m.SocialMedia.YouTube, "Youtube", new { @class = "form-label" })
                                    @Html.TextBoxFor(m => m.SocialMedia.YouTube, new { @class = "form-control", maxlength = "200", placeholder = "https://youtube.com/@username" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <!-- /Social Links -->

                <!-- Bank Details -->
                <div class="card">
                    <div class="card-header bg-light">
                        <div class="d-flex align-items-center">
                            <span class="bg-white avatar avatar-sm me-2 text-gray-7 flex-shrink-0">
                                <i class="ti ti-building-bank fs-16"></i>
                            </span>
                            <h4 class="text-dark">Bank Details</h4>
                        </div>
                    </div>
                    <div class="card-body pb-1">
                        <div class="row">
                            <div class="col-md-4">
                                <div class="mb-3">
                                    @Html.LabelFor(m => m.BankDetails.BankName, "Bank Name", new { @class = "form-label" })
                                    @Html.TextBoxFor(m => m.BankDetails.BankName, new { @class = "form-control", maxlength = "100", placeholder = "Bank name" })
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="mb-3">
                                    @Html.LabelFor(m => m.BankDetails.AccountName, "Holder Name", new { @class = "form-label" })
                                    @Html.TextBoxFor(m => m.BankDetails.AccountName, new { @class = "form-control", maxlength = "100", placeholder = "Account holder name" })
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="mb-3">
                                    @Html.LabelFor(m => m.BankDetails.AccountNumber, "Account No", new { @class = "form-label" })
                                    @Html.TextBoxFor(m => m.BankDetails.AccountNumber, new { @class = "form-control numeric-only", maxlength = "30", placeholder = "Account number" })
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="mb-3">
                                    @Html.LabelFor(m => m.BankDetails.IFSCCode, "IFSC Code", new { @class = "form-label" })
                                    @Html.TextBoxFor(m => m.BankDetails.IFSCCode, new { @class = "form-control", maxlength = "15", placeholder = "IFSC code" })
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="mb-3">
                                    @Html.LabelFor(m => m.BankDetails.BranchName, "Bank Branch", new { @class = "form-label" })
                                    @Html.TextBoxFor(m => m.BankDetails.BranchName, new { @class = "form-control", maxlength = "100", placeholder = "Branch name" })
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="mb-3">
                                    <label class="form-label">UPI ID</label>
                                    <input type="text" class="form-control" name="UPIID" maxlength="50" placeholder="name@upi" />
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <!-- /Bank Details -->

                <!-- Documents -->
                <div class="card">
                    <div class="card-header bg-light">
                        <div class="d-flex align-items-center">
                            <span class="bg-white avatar avatar-sm me-2 text-gray-7 flex-shrink-0">
                                <i class="ti ti-file fs-16"></i>
                            </span>
                            <h4 class="text-dark">Documents</h4>
                        </div>
                    </div>
                    <div class="card-body pb-1">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="form-label">Upload Resume</label>
                                    <p class="text-muted">Upload image size of 10MB, Accepted Format PDF</p>
                                    <div class="d-flex align-items-center flex-wrap">
                                        <div class="btn btn-primary drag-upload-btn mb-2 me-2">
                                            <i class="ti ti-file-upload me-1"></i>Upload Resume
                                            <input type="file" name="resumeFile" id="resumeFile" class="form-control image_sign" accept=".pdf">
                                        </div>
                                        <p class="mb-2" id="resumeFileName">No file selected</p>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="form-label">Upload Document</label>
                                    <p class="text-muted">Upload image size of 10MB, Accepted Format PDF</p>
                                    <div class="d-flex align-items-center flex-wrap">
                                        <div class="btn btn-primary drag-upload-btn mb-2 me-2">
                                            <i class="ti ti-file-upload me-1"></i>Upload Document
                                            <input type="file" name="documentFile" id="documentFile" class="form-control image_sign" accept=".pdf">
                                        </div>
                                        <p class="mb-2" id="documentFileName">No file selected</p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <!-- /Documents -->

                <!-- Status and Submit -->
                <div class="card">
                    <div class="card-body">
                        <div class="row align-items-center">
                            <div class="col-md-6">
                                <div class="mb-3 mb-md-0">
                                    @Html.LabelFor(m => m.Basic.Status, "Status", new { @class = "form-label" })
                                    <select class="form-select" name="Status">
                                        <option value="Active" selected>Active</option>
                                        <option value="Inactive">Inactive</option>
                                    </select>
                                </div>
                            </div>
                            <div class="col-md-6 text-end">
                                <button type="button" class="btn btn-light me-2" onclick="window.location.href='@Url.Action("Index", "Teacher")'">Cancel</button>
                                <button type="submit" class="btn btn-primary">Save Employee</button>
                            </div>
                        </div>
                    </div>
                </div>
                <!-- /Status and Submit -->
            }
        </div>
    </div>
</div>

<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script src="~/Scripts/bootstrap-tagsinput.min.js"></script>
<script src="~/Scripts/select2.min.js"></script>
<script src="~/Scripts/bootstrap-datepicker.min.js"></script>

<script>
    $(document).ready(function () {
        // Initialize Select2
        $('.select2').select2({
            placeholder: "Select an option",
            allowClear: true,
            width: '100%'
        });

        // Initialize Date Pickers
        $('.datetimepicker').datepicker({
            format: 'dd/mm/yyyy',
            autoclose: true,
            todayHighlight: true,
            clearBtn: true,
            orientation: "bottom auto"
        });

        // Set today's date for Date of Joining by default
        var today = new Date();
        var dd = String(today.getDate()).padStart(2, '0');
        var mm = String(today.getMonth() + 1).padStart(2, '0');
        var yyyy = today.getFullYear();
        var todayString = dd + '/' + mm + '/' + yyyy;

        if (!$('#Basic_DateOfJoining').val()) {
            $('#Basic_DateOfJoining').val(todayString);
        }

        // Photo Upload and Preview
        $('#photoFile').change(function () {
            readURL(this);
        });

        function readURL(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();
                reader.onload = function (e) {
                    $('#photoPreview').html('<img src="' + e.target.result + '" style="width:100%; height:100%; object-fit:cover; border-radius: 4px;" />');
                }
                reader.readAsDataURL(input.files[0]);
            }
        }

        // Remove Photo
        $('#removePhotoBtn').click(function () {
            $('#photoFile').val('');
            $('#photoPreview').html('<i class="ti ti-photo-plus fs-16"></i>');
        });

        // Document file name display
        $('#resumeFile').change(function () {
            var fileName = $(this).val().split('\\').pop();
            $('#resumeFileName').text(fileName || 'No file selected');
        });

        $('#documentFile').change(function () {
            var fileName = $(this).val().split('\\').pop();
            $('#documentFileName').text(fileName || 'No file selected');
        });

        // Numeric only input fields
        $('.numeric-only').on('input', function () {
            this.value = this.value.replace(/[^0-9]/g, '');
        });

        // Email validation
        $('#Basic_Email').on('blur', function () {
            var email = $(this).val();
            var regex = /^[^\s@@]+@@[^\s@@]+\.[^\s@@]+$/;

            if (email && !regex.test(email)) {
                $(this).addClass('is-invalid');
                if (!$(this).next('.invalid-feedback').length) {
                    $(this).after('<span class="invalid-feedback d-block">Please enter a valid email address</span>');
                }
            } else {
                $(this).removeClass('is-invalid');
                $(this).next('.invalid-feedback').remove();
            }
        });

        // Phone number validation (10 digits)
        $('#Basic_PrimaryContactNumber').on('blur', function () {
            var phone = $(this).val();

            if (phone && phone.length !== 10) {
                $(this).addClass('is-invalid');
                if (!$(this).next('.invalid-feedback').length) {
                    $(this).after('<span class="invalid-feedback d-block">Phone number must be exactly 10 digits</span>');
                }
            } else {
                $(this).removeClass('is-invalid');
                $(this).next('.invalid-feedback').remove();
            }
        });

        // Aadhar validation (12 digits)
        $('[name="AadharNo"]').on('blur', function () {
            var aadhar = $(this).val();

            if (aadhar && aadhar.length !== 12) {
                $(this).addClass('is-invalid');
                if (!$(this).next('.invalid-feedback').length) {
                    $(this).after('<span class="invalid-feedback d-block">Aadhar number must be exactly 12 digits</span>');
                }
            } else {
                $(this).removeClass('is-invalid');
                $(this).next('.invalid-feedback').remove();
            }
        });

        // PAN Number validation
        $('#Basic_PANNumber').on('blur', function () {
            var pan = $(this).val();
            var panRegex = /^[A-Z]{5}[0-9]{4}[A-Z]{1}$/;

            if (pan && pan.length > 0 && !panRegex.test(pan.toUpperCase())) {
                $(this).addClass('is-invalid');
                if (!$(this).next('.invalid-feedback').length) {
                    $(this).after('<span class="invalid-feedback d-block">Invalid PAN format (e.g., ABCDE1234F)</span>');
                }
            } else {
                $(this).removeClass('is-invalid');
                $(this).next('.invalid-feedback').remove();
                if (pan) {
                    $(this).val(pan.toUpperCase());
                }
            }
        });

        // IFSC Code validation
        $('#BankDetails_IFSCCode').on('blur', function () {
            var ifsc = $(this).val();
            var ifscRegex = /^[A-Z]{4}0[A-Z0-9]{6}$/;

            if (ifsc && !ifscRegex.test(ifsc.toUpperCase())) {
                $(this).addClass('is-invalid');
                if (!$(this).next('.invalid-feedback').length) {
                    $(this).after('<span class="invalid-feedback d-block">Invalid IFSC code format</span>');
                }
            } else {
                $(this).removeClass('is-invalid');
                $(this).next('.invalid-feedback').remove();
                if (ifsc) {
                    $(this).val(ifsc.toUpperCase());
                }
            }
        });

        // Form Validation before submit
        $('#employeeForm').submit(function (e) {
            var isValid = true;

            // Check required fields
            $('[required], .required').each(function () {
                var input = $(this).is('label') ? $(this).parent().find('input, select, textarea').first() : $(this);
                if (!input.val() || input.val() === '') {
                    input.addClass('is-invalid');
                    isValid = false;
                }
            });

            // Check email format
            var email = $('#Basic_Email').val();
            if (email) {
                var emailRegex = /^[^\s@@]+@@[^\s@@]+\.[^\s@@]+$/;
                if (!emailRegex.test(email)) {
                    $('#Basic_Email').addClass('is-invalid');
                    isValid = false;
                }
            }

            // Check phone number
            var phone = $('#Basic_PrimaryContactNumber').val();
            if (phone && phone.length !== 10) {
                $('#Basic_PrimaryContactNumber').addClass('is-invalid');
                isValid = false;
            }

            // Check Aadhar if provided
            var aadhar = $('[name="AadharNo"]').val();
            if (aadhar && aadhar.length !== 12) {
                $('[name="AadharNo"]').addClass('is-invalid');
                isValid = false;
            }

            if (!isValid) {
                e.preventDefault();

                // Scroll to first error
                var firstError = $('.is-invalid:first');
                if (firstError.length) {
                    $('html, body').animate({
                        scrollTop: firstError.offset().top - 100
                    }, 500);
                }

                // Show alert
                alert('Please correct the errors in the form before submitting.');
                return false;
            }

            return true;
        });

        // Remove invalid class on input
        $('input, select, textarea').on('input change', function () {
            if ($(this).hasClass('is-invalid') && $(this).val()) {
                $(this).removeClass('is-invalid');
                $(this).next('.invalid-feedback').remove();
            }
        });
    });
</script>