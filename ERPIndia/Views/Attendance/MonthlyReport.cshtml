@model ERPIndia.Models.Attendance.MonthlyAttendanceViewModel
@{
    ViewBag.Title = "Monthly Attendance";
}

<style>
    /* Header Card Styling */
    .filter-card {
        background: linear-gradient(to bottom, #ffffff, #f8f9fa);
        border-radius: 10px;
        padding: 20px;
        margin-bottom: 20px;
        box-shadow: 0 2px 6px rgba(0,0,0,0.08);
    }

    /* Table Styling */
    .monthly-table {
        width: 100%;
        border-collapse: collapse;
        font-size: 11px;
        border: 1px solid black;
    }

    .monthly-table tbody tr:nth-child(odd) {
        background-color: #ffffff;
    }

    .monthly-table tbody tr:nth-child(even) {
        background-color: #f8f9fa;
    }

    .monthly-table tbody tr:hover {
        background-color: #e3f2fd;
    }

    .monthly-table tbody td {
        padding: 4px 2px;
        border: 1px solid black !important;
        text-align: center;
        font-size: 12px;
        min-width: 25px;
    }

    /* Day headers */
    .day-header {
        background: #4a90e2 !important;
        color: white;
        font-size: 10px;
        padding: 3px 2px;
        border: 1px solid black !important;
    }

    .weekday-header {
        background: #6ba3e5 !important;
        color: white;
        font-size: 9px;
        padding: 2px 1px;
        border: 1px solid black !important;
    }

    /* Status cell colors */
    .status-p {
        background-color: #d4edda;
        color: #155724;
        font-weight: bold;
    }

    .status-a {
        background-color: #f8d7da;
        color: #721c24;
        font-weight: bold;
    }

    .status-l {
        background-color: #fff3cd;
        color: #856404;
        font-weight: bold;
    }

    .status-hd {
        background-color: #cce5ff;
        color: #004085;
    }

    .status-su, .status-h {
        background-color: #e7e7e7;
        color: #666;
    }

    /* Total columns */
    .total-column {
        background-color: #f0f0f0;
        font-weight: bold;
        border-left: 2px solid black !important;
    }

    .attendance-excellent {
        background: #d4edda;
        color: #155724;
    }

    .attendance-good {
        background: #cce5ff;
        color: #004085;
    }

    .attendance-average {
        background: #fff3cd;
        color: #856404;
    }

    .attendance-poor {
        background: #f8d7da;
        color: #721c24;
    }

    /* Student info columns */
    .student-info {
        text-align: left !important;
        font-weight: 500;
        padding-left: 5px !important;
        position: sticky;
        left: 0;
        background: white;
        z-index: 5;
        border: 1px solid black !important;
    }

    .seq-column {
        position: sticky;
        left: 0;
        background: white;
        z-index: 5;
        width: 40px;
        border: 1px solid black !important;
    }

    /* Summary cards */
    .summary-card {
        background: white;
        border-radius: 8px;
        padding: 15px;
        margin: 10px 0;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }

    .summary-stat {
        display: inline-block;
        margin: 0 15px;
    }

    .stat-label {
        color: #666;
        font-size: 12px;
    }

    .stat-value {
        font-size: 20px;
        font-weight: bold;
        color: #333;
    }

    /* Export buttons */
    .export-button {
        background: #28a745;
        color: white;
        padding: 8px 15px;
        border: none;
        border-radius: 4px;
        margin: 0 5px;
        cursor: pointer;
    }

        .export-button:hover {
            background: #218838;
        }

    /* Spinner */
    .spinner-overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0,0,0,0.5);
        display: none;
        justify-content: center;
        align-items: center;
        z-index: 9999;
    }

    .spinner {
        border: 4px solid #f3f3f3;
        border-top: 4px solid #9c27b0;
        border-radius: 50%;
        width: 40px;
        height: 40px;
        animation: spin 1s linear infinite;
    }

    @@keyframes spin {
        0% {
            transform: rotate(0deg);
        }

        100% {
            transform: rotate(360deg);
        }
    }

    /* Print styles */
    @@media print {
        .no-print {
            display: none !important;
        }

        .monthly-table {
            font-size: 9px;
        }
    }

    /* Button Styling */
    .search-button {
        background: linear-gradient(to bottom, #1c79eb, #2c78bf, #155ab5);
        color: white;
        padding: 0.5rem 1.5rem;
        border: none;
        border-radius: 5px;
        font-weight: bold;
        cursor: pointer;
        transition: transform 0.2s;
    }

        .search-button:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 10px rgba(0,0,0,0.2);
        }

    /* Force header styling */
    .monthly-table thead th {
        background: linear-gradient(to bottom, #f0f0f0, #e0e0e0, #d0d0d0);
        color: black !important;
        padding: 8px 5px;
        text-align: center;
        font-size: 11px;
        font-weight: 600;
        position: sticky;
        top: 0;
        z-index: 10;
        border: 1px solid black !important;
    }

        /* Override any inline styles for headers */
        .monthly-table thead th.day-header,
        .monthly-table thead th.weekday-header {
            background-color: #D3D3D3 !important;
            color: #000000 !important;
            border: 1px solid black !important;
        }

        /* Special styling for Sunday/Holiday date headers */
        .monthly-table thead th.holiday-header {
            background-color: #FFFF00 !important;
            color: #000000 !important;
            font-weight: bold !important;
            border: 1px solid black !important;
        }

    /* Summary row */
    .summary-row {
        background-color: #D3D3D3 !important;
        font-weight: bold !important;
        color: #000000 !important;
    }

        .summary-row td {
            background-color: #D3D3D3 !important;
            color: #000000 !important;
            font-weight: bold !important;
            border: 1px solid black !important;
        }

    .monthly thead th {
        background: linear-gradient(to bottom, #f0f0f0, #e0e0e0, #d0d0d0);
        color: black !important;
        padding: 8px 5px;
        text-align: center;
        font-size: 11px;
        font-weight: 600;
        position: sticky;
        top: 0;
        z-index: 10;
        border: 1px solid black !important;
    }

    /* Status cell colors - updated for colored text on white background */
    .status-p {
        background-color: white;
        color: #008000;
        font-weight: bold;
        border: 1px solid black !important;
    }

    .status-a {
        background-color: white;
        color: #FF0000;
        font-weight: bold;
        border: 1px solid black !important;
    }

    .status-l {
        background-color: white;
        color: #FF6600;
        font-weight: bold;
        border: 1px solid black !important;
    }

    .status-hd {
        background-color: white;
        color: black;
        font-weight: bold;
        border: 1px solid black !important;
    }

    .status-su, .status-h {
        background-color: white;
        color: #FFB300;
        font-weight: bold;
        border: 1px solid black !important;
    }

    /* Additional table row borders */
    .monthly-table tbody tr {
        border: 1px solid black;
    }

    .monthly-table thead tr {
        border: 1px solid black;
    }
</style>

<div class="container-fluid">
    <!-- Header Card -->
    <div class="card no-print">
        <div class="card-header bg-light">
            <div class="d-flex justify-content-between align-items-center">
                <h5 class="card-title mb-0">
                    <i class="fas fa-calendar-alt me-2"></i>Monthly Attendance
                </h5>
            </div>
        </div>
        <div class="card-body">
            <form id="searchForm" class="needs-validation" novalidate>
                <div class="row g-3">
                    <div class="col-md-2">
                        <label for="ddlClass" class="form-label">Class <span class="text-danger">*</span></label>
                        @Html.DropDownListFor(m => m.Classes, Model.Classes, "Select Class", new { @class = "form-select", id = "ddlClass" })
                    </div>
                    <div class="col-md-2">
                        <label for="ddlSection" class="form-label">Section <span class="text-danger">*</span></label>
                        @Html.DropDownListFor(m => m.Sections, Model.Sections, "Select Section", new { @class = "form-select", id = "ddlSection" })
                    </div>
                    <div class="col-md-2">
                        <label for="ddlMonth" class="form-label">Month <span class="text-danger">*</span></label>
                        @Html.DropDownListFor(m => m.Months, Model.Months, new { @class = "form-select", id = "ddlMonth" })
                    </div>
                    <div class="col-md-3">
                        <label class="form-label">&nbsp;</label>
                        <button type="button" class="btn search-button w-100" id="btnSearch">
                            <i class="fas fa-search me-2"></i>Generate Report
                        </button>
                    </div>
                </div>
            </form>
        </div>
    </div>

    <!-- Summary Statistics -->
    <!-- Report Table -->
    <div id="reportContainer" class="mt-4" style="display:none;">
        <div class="card">
            <div class="card-header bg-light">
                <div class="row align-items-center">
                    <div class="col-6">
                        <h6 class="mb-0">
                            <i class="fas fa-table me-2"></i>Attendance Details
                        </h6>
                    </div>
                    <div class="col-6 text-end">
                        <button type="button" class="btn btn-success btn-sm" onclick="exportToExcel()" style="display: inline-block !important; visibility: visible !important;">
                            <i class="fas fa-file-excel me-1"></i>Export to Excel
                        </button>
                    </div>
                </div>
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table class="monthly-table" id="monthlyAttendanceTable">
                        <thead id="tableHeader">
                            <!-- Dynamic headers will be generated here -->
                        </thead>
                        <tbody id="tableBody">
                            <!-- Data will be loaded here -->
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Spinner Overlay -->
<div class="spinner-overlay" id="spinnerOverlay">
    <div class="spinner-box">
        <div class="spinner"></div>
        <div>Generating monthly report...</div>
    </div>
</div>

<!-- Updated JavaScript section for MonthlyReport.cshtml -->
<script>
$(document).ready(function() {
    var reportData = null;
    var dataTable = null;

    function showToast(message, type, duration) {
        type = type || 'success';
        duration = duration || 4000;

        var icons = {
            success: 'check-circle',
            error: 'times-circle',
            warning: 'exclamation-triangle',
            info: 'info-circle'
        };

        var toastId = 'toast_' + Date.now();
        var toastHtml =
            '<div class="toast toast-' + type + '" id="' + toastId + '" style="display:none;">' +
            '<i class="fas fa-' + icons[type] + ' me-2"></i>' +
            message +
            '</div>';

        $('#toastContainer').append(toastHtml);
        $('#' + toastId).fadeIn(300);

        setTimeout(function () {
            $('#' + toastId).fadeOut(300, function () {
                $(this).remove();
            });
        }, duration);
    }

    // Show/Hide spinner
    function showSpinner() {
        $('#spinnerOverlay').css('display', 'flex');
    }

    function hideSpinner() {
        $('#spinnerOverlay').hide();
    }

    // Clear existing data
    function clearExistingData() {
        if (dataTable) {
            try {
                dataTable.destroy();
            } catch(e) {
                console.log('DataTable destroy error:', e);
            }
            dataTable = null;
        }

        $('#tableHeader').empty();
        $('#tableBody').empty();
        $('#reportContainer').hide();
        reportData = null;
    }

    // Search button click
    $('#btnSearch').click(function() {
        var classId = $('#ddlClass').val();
        var sectionId = $('#ddlSection').val();
        var monthYear = $('#ddlMonth').val(); // Changed from separate month/year

        // Validation
        if (!classId || classId === '') {
            showToast('Please select a class', 'warning');
            $('#ddlClass').focus();
            return;
        }

        if (!sectionId || sectionId === '') {
            showToast('Please select a section', 'warning');
            $('#ddlSection').focus();
            return;
        }

        if (!monthYear || monthYear === '') {
            showToast('Please select a month', 'warning');
            $('#ddlMonth').focus();
            return;
        }

        clearExistingData();
        loadMonthlyReport(classId, sectionId, monthYear);
    });

    // Load monthly report with session date handling
    function loadMonthlyReport(classId, sectionId, monthYear) {
        showSpinner();

        console.log('Loading report with params:', {
            classId: classId,
            sectionId: sectionId,
            monthYear: monthYear
        });

        $.ajax({
            url: '@Url.Action("GetMonthlyAttendanceReport", "Attendance")',
            type: 'POST',
            data: {
                classId: classId,
                sectionId: sectionId,
                monthYear: monthYear // Send combined month-year value
            },
            dataType: 'json',
            timeout: 60000,
            success: function(response) {
                hideSpinner();
                console.log('Response received:', response);

                if (response && response.success) {
                    reportData = response.data;

                    if (!reportData) {
                        showToast('No data received from server', 'error');
                        return;
                    }

                    // Show session info if partial month
                    if (response.sessionInfo && response.sessionInfo.isPartialMonth) {
                        showToast('Note: This month partially falls within the session period (' +
                            response.sessionInfo.effectiveStart + ' to ' +
                            response.sessionInfo.effectiveEnd + ')', 'info', 6000);
                    }

                    displayReport(reportData, response.colors);
                    $('#reportContainer').show();

                    // Update report header with session info
                    if (response.sessionInfo) {
                        $('#sessionInfo').html(
                            '<small class="text-muted">Session: ' + response.sessionInfo.sessionName +
                            ' (' + response.sessionInfo.sessionStart + ' to ' + response.sessionInfo.sessionEnd + ')</small>'
                        );
                    }

                    if (response.message) {
                        showToast(response.message, 'success');
                    }
                } else {
                    var errorMsg = response && response.message ? response.message : 'Failed to generate report';
                    showToast(errorMsg, 'error');

                    if (response && response.details) {
                        console.error('Error details:', response.details);
                    }
                }
            },
            error: function(xhr, status, error) {
                hideSpinner();

                var errorMessage = 'Error generating report: ';

                if (status === 'timeout') {
                    errorMessage += 'Request timed out. Please try again.';
                } else if (xhr.status === 0) {
                    errorMessage += 'Network error. Please check your connection.';
                } else if (xhr.status === 404) {
                    errorMessage += 'Report endpoint not found.';
                } else if (xhr.status === 500) {
                    errorMessage += 'Server error occurred.';

                    try {
                        var responseJson = JSON.parse(xhr.responseText);
                        if (responseJson && responseJson.message) {
                            errorMessage += '\n' + responseJson.message;
                        }
                    } catch(e) {
                        console.log('Could not parse error response');
                    }
                } else {
                    errorMessage += error || 'Unknown error occurred';
                }

                showToast(errorMessage, 'error');
                console.error('AJAX Error:', {
                    status: status,
                    error: error,
                    xhr: xhr,
                    responseText: xhr.responseText
                });
            }
        });
    }

    // Export to Excel function
    window.exportToExcel = function() {
        var classId = $('#ddlClass').val();
        var sectionId = $('#ddlSection').val();
        var monthYear = $('#ddlMonthYear').val();

        if (!classId || !sectionId || !monthYear) {
            showToast('Please generate the report first', 'warning');
            return;
        }

        showSpinner();

        $.ajax({
            url: '@Url.Action("ExportMonthlyAttendanceToExcel", "Attendance")',
            type: 'POST',
            data: {
                classId: classId,
                sectionId: sectionId,
                monthYear: monthYear // Send combined month-year
            },
            success: function(response) {
                hideSpinner();
                if (response.success) {
                    var link = document.createElement('a');
                    link.href = 'data:application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;base64,' + response.fileContent;
                    link.download = response.fileName;
                    document.body.appendChild(link);
                    link.click();
                    document.body.removeChild(link);

                    showToast('Excel file downloaded successfully!', 'success');
                } else {
                    showToast('Failed to export: ' + response.message, 'error');
                }
            },
            error: function(xhr, status, error) {
                hideSpinner();
                showToast('Error exporting to Excel: ' + error, 'error');
            }
        });
    };

    function displayReport(data, colors) {
        try {
            if (!data) {
                console.error('No data to display');
                return;
            }

            // Build table headers
            var headerHtml = '<tr>';
            headerHtml += '<th rowspan="2">S.No</th>';
            headerHtml += '<th rowspan="2">Adm</th>';
            headerHtml += '<th rowspan="2">Roll</th>';
            headerHtml += '<th rowspan="2">Student</th>';
            headerHtml += '<th rowspan="2">Father</th>';

            // Date headers - handle days outside session
            if (data.DatesInMonth && Array.isArray(data.DatesInMonth) && data.DatesInMonth.length > 0) {
                $.each(data.DatesInMonth, function (i, date) {
                    if (date && date.Day) {
                        var headerClass = '';
                        if (date.IsWithinSession === false) {
                            headerClass = ' class="outside-session"';
                        }
                        headerHtml += '<th' + headerClass + '>' + date.Day + '</th>';
                    }
                });
            }

            // Total headers
            headerHtml += '<th rowspan="2">WD</th>';
            headerHtml += '<th rowspan="2">Total<br/>P</th>';
            headerHtml += '<th rowspan="2">%</th>';
            headerHtml += '<th colspan="4">Breakdown</th>';
            headerHtml += '</tr>';

            // Second row - weekday headers
            headerHtml += '<tr>';
            if (data.DatesInMonth && Array.isArray(data.DatesInMonth) && data.DatesInMonth.length > 0) {
                $.each(data.DatesInMonth, function (i, date) {
                    if (date && date.WeekDay) {
                        var headerClass = '';
                        var style = '';

                        // Handle days outside session
                        if (date.IsWithinSession === false) {
                            style = ' style="background-color: ' + (colors.outsideSession || '#E0E0E0') + ';"';
                        } else if (date.IsHoliday) {
                            // Holiday gets yellow background
                            style = ' style="background-color: #FFFF00;"';
                        } else if (date.IsSunday) {
                            // Sunday gets gray background
                            style = ' style="background-color: #D3D3D3;"';
                        }

                        headerHtml += '<th' + style + '>' + date.WeekDay + '</th>';
                    }
                });
            }

            // Sub-headers for breakdown
            headerHtml += '<th>P</th>';
            headerHtml += '<th>A</th>';
            headerHtml += '<th>L</th>';
            headerHtml += '<th>H</th>';
            headerHtml += '</tr>';

            $('#tableHeader').html(headerHtml);

            // Build table body
            var bodyHtml = '';

            if (data.Students && Array.isArray(data.Students) && data.Students.length > 0) {
                $.each(data.Students, function (index, student) {
                    if (!student) return true;

                    var attendancePercentage = student.AttendancePercentage || 0;

                    bodyHtml += '<tr>';
                    bodyHtml += '<td style="color:black;">' + (student.SerialNo || (index + 1)) + '</td>';
                    bodyHtml += '<td style="color:black;">' + (student.AdmissionNo || '-') + '</td>';
                    bodyHtml += '<td style="color:black;">' + (student.RollNumber || '-') + '</td>';
                    bodyHtml += '<td style="color:black;">' + (student.StudentName || 'N/A') + '</td>';
                    bodyHtml += '<td style="color:black;">' + (student.FatherName || '-') + '</td>';

                    // Daily attendance cells with white background and colored text
                    if (data.DatesInMonth && Array.isArray(data.DatesInMonth) && data.DatesInMonth.length > 0) {
                        $.each(data.DatesInMonth, function (i, date) {
                            if (!date) return true;

                            var status = '';
                            var cellStyle = '';

                            // Check if day is outside session
                            if (date.IsWithinSession === false) {
                                cellStyle = 'style="background-color: white; color: #999999;"';
                                status = '-';
                            }
                            // Check for Holiday (yellow background)
                            else if (date.IsHoliday) {
                                cellStyle = 'style="background-color: #FFFF00; color: #000; font-weight: bold;"';
                                status = '';
                            }
                            // Check for Sunday (gray text on white background)
                            else if (date.IsSunday) {
                                cellStyle = 'style="background: linear-gradient(to bottom, #f0f0f0, #e0e0e0, #d0d0d0); color:  black!important; font-weight: bold;"';
                                status = 'SU'; 
                               
                            }
                            // Regular attendance status
                            else if (student.DailyAttendanceMonthly && student.DailyAttendanceMonthly[date.Day]) {
                                status = student.DailyAttendanceMonthly[date.Day];

                                switch (status.toUpperCase()) {
                                    case 'P':
                                        // Green text on white background for Present
                                        cellStyle = 'style="background-color: white; color: ' + (colors.present || '#008000') + '; font-weight: bold;"';
                                        break;
                                    case 'A':
                                        // Red text on white background for Absent
                                        cellStyle = 'style="background-color: white; color: ' + (colors.absent || '#FF0000') + '; font-weight: bold;"';
                                        break;
                                    case 'L':
                                        // Orange text on white background for Late
                                        cellStyle = 'style="background-color: white; color: ' + (colors.late || '#FF6600') + '; font-weight: bold;"';
                                        break;
                                    case 'HD':
                                        // Blue text on white background for Half Day
                                        cellStyle = 'style="background-color: white; color: ' + (colors.present || '#0b1af0') + '; font-weight: bold;"';
                                        break;
                                    default:
                                        cellStyle = 'style="background-color: white;"';
                                        break;
                                }
                            } else {
                                cellStyle = 'style="background-color: white;"';
                            }
                            if (status == 'HD') {
                                bodyHtml += '<td style="background-color:white;color: #0b1af0; font-weight: bold;">H</td>';
                            }
                            else {
                                bodyHtml += '<td ' + cellStyle + '>' + (status || '') + '</td>';
                            }
                        });
                    }

                    // Calculate totals
                    var totalPresent = student.TotalPresent || 0;
                    var totalAbsent = student.TotalAbsent || 0;
                    var totalLate = student.TotalLate || 0;
                    var totalHalfDay = student.TotalHalfDay || 0;
                    var effectivePresent = student.TotalEffectivePresent || (totalPresent + totalLate + totalHalfDay);
                    var workingDays = data.WorkingDays || 0;

                    // Display totals
                    bodyHtml += '<td style="font-weight: bold; background-color: #E7E1FD; color: #604DB6;">' + workingDays + '</td>';
                    bodyHtml += '<td style="font-weight: bold; background-color: #d4edda;">' + effectivePresent + '</td>';

                    // Percentage with color coding
                    var percentStyle = '';
                    if (attendancePercentage >= 90) {
                        percentStyle = 'background-color: #d4edda; color: #155724;';
                    } else if (attendancePercentage >= 75) {
                        percentStyle = 'background-color: #fff3cd; color: #856404;';
                    } else {
                        percentStyle = 'background-color: #f8d7da; color: #721c24;';
                    }

                    bodyHtml += '<td style="font-weight: bold; ' + percentStyle + '">' +
                        attendancePercentage.toFixed(1) + '%</td>';

                    // Breakdown with colored backgrounds and black text
                    // Present - Green background
                    bodyHtml += '<td style="background-color: ' + (colors.present || '#008000') + '; color: white; font-weight: bold;">' + totalPresent + '</td>';
                    bodyHtml += '<td style="background-color: ' + (colors.absent || '#FF0000') + '; color: white; font-weight: bold;">' + totalAbsent + '</td>';
                    bodyHtml += '<td style="background-color: ' + (colors.late || '#FF6600') + '; color: white; font-weight: bold;">' + totalLate + '</td>';
                    bodyHtml += '<td style="background-color: ' + (colors.halfDay || '#0000FF') + '; color: white; font-weight: bold;">' + totalHalfDay + '</td>';
                    bodyHtml += '</tr>';
                });
            }

            $('#tableBody').html(bodyHtml);

            // Update summary information
            if (data.IsPartialMonth) {
                $('#monthSummary').html(
                    '<div class="alert alert-info">' +
                    '<i class="fas fa-info-circle"></i> ' +
                    'Showing data for effective session days only. ' +
                    'Working Days: ' + data.WorkingDays + ' | ' +
                    'Effective Days: ' + data.EffectiveDaysInMonth + ' | ' +
                    'Total Students: ' + data.TotalStudents +
                    '</div>'
                );
            } else {
                $('#monthSummary').html(
                    '<div class="alert alert-success">' +
                    'Working Days: ' + data.WorkingDays + ' | ' +
                    'Total Students: ' + data.TotalStudents + ' | ' +
                    'Average Attendance: ' + (data.AverageAttendance || 0).toFixed(2) + '%' +
                    '</div>'
                );
            }

        } catch (error) {
            console.error('Error displaying report:', error);
            showToast('Error displaying report data', 'error');
        }
    }
});
</script>
