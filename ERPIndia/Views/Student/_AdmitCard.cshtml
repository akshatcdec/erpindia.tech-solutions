@model AdmitCardViewModel
@using CrystalDecisions.CrystalReports.Engine
@using CrystalDecisions.Shared
@using System.IO
@using System.Data
@using ERPIndia
@using ERPIndia.Class.Helper
<style>
    body, html {
        margin: 0;
        padding: 0;
        height: 100%;
    }

    .text-center {
        height: 100vh;
        margin: 0;
        padding: 0;
    }
</style>
@{
    // Crystal Report settings
    string reportPath = Server.MapPath("~/Reports/CrystalReport/0/admitcard.rpt");
    ReportDocument reportDocument = new ReportDocument();
    try
    {
        // Load the report
        reportDocument.Load(reportPath);

        // Set data source directly
        if (Model != null && Model.StudentsDataTable != null && Model.StudentsDataTable.Rows.Count > 0)
        {
            string examhide= Model.ExamDetailsDataTable.Rows.Count==1?"N":"Y";
            string code = CommonLogic.GetSessionValue(StringConstants.TenantCode);
            string img = CommonLogic.GetSessionValue(StringConstants.AdmitCardBannerImg);
            string Pimg = CommonLogic.GetSessionValue(StringConstants.PrincipalSignImg);
            string SessionName = CommonLogic.GetSessionValue(StringConstants.ActiveSessionPrint);
            string logoPath = Server.MapPath(ERPIndia.Class.Helper.AppLogic.GetLogoImage(code, img));
            string pPath = Server.MapPath(ERPIndia.Class.Helper.AppLogic.GetLogoImage(code, Pimg));
          
            //reportDocument.Database.Tables[0].SetDataSource(Model.ExamDetailsDataTable);
            reportDocument.SetDataSource(Model.StudentsDataTable);
            string examname = Model.ExamDetailsDataTable.Rows[0]["AdmitCard"].ToString();
            reportDocument.Subreports["exam"].SetDataSource(Model.ExamDetailsDataTable);
            // Set parameters
            reportDocument.SetParameterValue("fmlogo", logoPath);
            reportDocument.SetParameterValue("psign", pPath);  // Fixed: was using logoPath
            reportDocument.SetParameterValue("Session", SessionName);
            reportDocument.SetParameterValue("examname", examname);
            reportDocument.SetParameterValue("frmExam", examhide);
            // Generate a unique identifier for the report
            string reportId = "AdmitCard_" + DateTime.Now.ToString("yyyyMMddHHmmss");

            // Store the report document in session for later retrieval
            Session[reportId] = reportDocument;

            // Display the report using an iframe that calls an action to stream the PDF
            <div class="text-center">
                <iframe src="@Url.Action("StreamReport", "Student", new { id = reportId })"
                        class="w-100" style="height: 100%; width: 100%; border: none;"></iframe>
            </div>
            <script>
                $(window).on('beforeunload', function() {
                    // Get the report ID from the iframe src
                    var iframeSrc = $('iframe').attr('src');
                    if (iframeSrc) {
                        var reportId = iframeSrc.split('id=')[1];
                        if (reportId) {
                            // Make an async call to clean up the report
                            $.ajax({
                                url: '@Url.Action("CleanupReport", "Student")',
                                data: { id: reportId },
                                async: false
                            });
                        }
                    }
                });
            </script>
        }
        else
        {
            <div class="alert alert-warning">
                <strong>No data available:</strong> There are no records to display in the report.
            </div>
            // Clean up if no data
            reportDocument.Close();
            reportDocument.Dispose();
        }
    }
    catch (Exception ex)
    {
        <div class="alert alert-danger">
            <strong>Error loading report:</strong> @ex.Message
            <br />
            <small>@ex.StackTrace</small>
        </div>
        // Clean up on error
        if (reportDocument != null)
        {
            reportDocument.Close();
            reportDocument.Dispose();
        }
    }
}