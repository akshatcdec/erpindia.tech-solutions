@model ERPIndia.Models.UserModel
<div class="card mb-4">
    <div class="card-header p-0">
        <ul class="nav nav-tabs" id="profileTabs" role="tablist">
            <li class="nav-item" role="presentation">
                <button class="nav-link active" id="profile-tab" data-bs-toggle="tab" data-bs-target="#profile-tab-pane" type="button" role="tab" aria-controls="profile-tab-pane" aria-selected="true">
                    <i class="fa fa-user me-1"></i> Profile Information
                </button>
            </li>
            <li class="nav-item" style="display:none"  role="presentation">
                <button class="nav-link" id="transport-tab" data-bs-toggle="tab" data-bs-target="#transport-tab-pane" type="button" role="tab" aria-controls="transport-tab-pane" aria-selected="false">
                    <i class="fa fa-calendar me-1"></i> Transport Months
                </button>
            </li>
        </ul>
    </div>

    <div class="card-body">
        <div class="validation-summary">
            @if (!ViewData.ModelState.IsValid)
            {
                <div class="alert alert-danger">
                    <h4>Please correct the following errors:</h4>
                    <ul>
                        @foreach (var key in ViewData.ModelState.Keys)
                        {
                            foreach (var error in ViewData.ModelState[key].Errors)
                            {
                                <li>@error.ErrorMessage</li>
                            }
                        }
                    </ul>
                </div>
            }
        </div>
        @using (Html.BeginForm("Index", "EditProfile", FormMethod.Post, new { enctype = "multipart/form-data", onsubmit = "onBeginSubmit()" }))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(model => model.UserId)
          
            <div class="tab-content" id="profileTabsContent">
                <!-- Profile Information Tab -->
                <div class="tab-pane fade show active" id="profile-tab-pane" role="tabpanel" aria-labelledby="profile-tab" tabindex="0">
                    <div class="box box-primary">
                        <div class="box-body">
                            <div class="message-box"></div>
                            <div class="row">
                                <div class="col-md-9">
                                    <div class="row">
                                        <div class="col-md-4">
                                            <div class="form-group">
                                                <label class="control-label">@Html.LabelFor(model => model.FirstName) <span class="required">*</span></label>
                                                @Html.TextBoxFor(model => model.FirstName, new { @class = "form-control", @maxlength = "50" })
                                                @Html.ValidationMessageFor(model => model.FirstName)
                                            </div>
                                        </div>
                                        <div class="col-md-4">
                                            <div class="form-group">
                                                <label class="control-label">
                                                    @Html.LabelFor(model => model.UserName) <span class="required">*</span>
                                                </label>
                                                @Html.TextBoxFor(model => model.UserName, new { @class = "form-control", @maxlength = "12" })
                                                @Html.ValidationMessageFor(model => model.UserName)
                                            </div>
                                        </div>
                                        <div class="col-md-4">
                                            <div class="form-group">
                                                <label class="control-label">
                                                    @Html.LabelFor(model => model.Password)  <span class="required">*</span>
                                                </label>
                                                @Html.TextBoxFor(model => model.Password, new { @class = "form-control", @onkeyup = "ValidateUserPassword(this.id,5)", @maxlength = "10", @value = Model.Password })
                                                @Html.ValidationMessageFor(model => model.Password, "", new { @value = Model.Password })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row" style="display:none">
                                        <div class="col-md-4">
                                            <div class="form-group">
                                                <label class="control-label">
                                                    @Html.LabelFor(model => model.IsActive)  <span class="required">*</span>
                                                </label>
                                                <div>
                                                    <div class="radio-list">
                                                        <label class="radio-inline">
                                                            @Html.RadioButtonFor(model => model.IsActive, "true", new { @checked = true }) Active
                                                        </label>
                                                        <label class="radio-inline">
                                                            @Html.RadioButtonFor(model => model.IsActive, "false") Inactive
                                                        </label>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="profile-picture-container text-center">
                                        <div class="mb-3">
                                            <img class="profile-user-img img-responsive img-circle" src="@Url.Content(Model.ProfilePic)" alt="Profile Picture">
                                        </div>
                                        <div class="text-center">
                                            <div class="form-group">
                                                <div class="btn btn-default btn-file">
                                                    <i class="fa fa-user-circle"></i>&nbsp;&nbsp;@Html.DisplayNameFor(model => model.ProfilePic)
                                                    <input type="file" name="ProfileImg" id="ProfileImg" />
                                                </div>
                                                @Html.HiddenFor(model => model.ProfilePic)
                                            </div>
                                        </div>
                                        <div>
                                            @Html.ValidationMessageFor(m => m.ProfilePic)
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Transport Months Tab -->
                <div class="tab-pane fade" style="display:none" id="transport-tab-pane" role="tabpanel" aria-labelledby="transport-tab" tabindex="0">
                    <div class="row">
                        <div class="col-md-12">
                            <h5 class="mb-3">Select Transport Months</h5>
                            <div class="months-container">
                                @if (Model.TransportMonths != null)
                                {
                                    for (int i = 0; i < Model.TransportMonths.Count; i++)
                                    {
                                        @Html.HiddenFor(m => m.TransportMonths[i].monthId)
                                        @Html.HiddenFor(m => m.TransportMonths[i].month_name)
                                        @Html.HiddenFor(m => m.TransportMonths[i].ClientId)
                                        @Html.HiddenFor(m => m.TransportMonths[i].SchoolCode)
                                    }

                                    <div class="row">
                                        @for (int i = 0; i < Model.TransportMonths.Count; i++)
                                        {
                                            <div class="col-md-3 col-sm-4 col-6 mb-4">
                                                <div class="month-toggle-card">
                                                    <div class="month-name">@Model.TransportMonths[i].month_name</div>
                                                    <label class="switch">
                                                        @Html.CheckBoxFor(m => m.TransportMonths[i].Status)
                                                        <span class="slider round"></span>
                                                    </label>
                                                </div>
                                            </div>
                                        }
                                    </div>
                                }
                                else
                                {
                                    <div class="alert alert-info">No transport months available.</div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Action Buttons - Common to both tabs -->
            <div class="form-actions mt-4">
                <div class="row text-center">
                    <div class="col-md-12">
                        <button type="submit" class="btn btn-success btn-flat"><i class="fa fa-save"></i>&nbsp;&nbsp;Save</button>
                        <button type="reset" class="btn btn-primary btn-flat" onclick="$(this).resetValidation()"><i class="fa fa-undo"></i>&nbsp;&nbsp;Reset</button>
                        <a class="btn btn-primary btn-flat" href="@Url.Action("", "SiteMap")"><i class="fa fa-ban"></i>&nbsp;&nbsp;Cancel</a>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<style>
    /* Profile Picture */
    .profile-user-img {
        border-radius: 50%;
        border: 3px solid #d2d6de;
        padding: 3px;
        width: 150px;
        height: 150px;
        object-fit: cover;
    }

    .profile-picture-container {
        padding: 15px;
    }

    /* Tabs */
    .nav-tabs .nav-link {
        padding: 12px 20px;
        font-weight: 500;
    }

        .nav-tabs .nav-link.active {
            font-weight: 600;
        }

    /* Months Container */
    .months-container {
        padding: 10px 0;
    }

    .month-toggle-card {
        display: flex;
        flex-direction: column;
        align-items: center;
        padding: 15px;
        border-radius: 8px;
        background-color: #f8f9fa;
        border: 1px solid #dee2e6;
        height: 100%;
        text-align: center;
    }

    .month-name {
        font-weight: 600;
        font-size: 18px;
        color: #333;
        margin-bottom: 15px;
    }

    /* The switch - the box around the slider */
    .switch {
        position: relative;
        display: inline-block;
        width: 60px;
        height: 34px;
    }

        /* Hide default HTML checkbox */
        .switch input {
            opacity: 0;
            width: 0;
            height: 0;
        }

    /* The slider */
    .slider {
        position: absolute;
        cursor: pointer;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: #ccc;
        transition: .4s;
    }

        .slider:before {
            position: absolute;
            content: "";
            height: 26px;
            width: 26px;
            left: 4px;
            bottom: 4px;
            background-color: white;
            transition: .4s;
        }

    input:checked + .slider {
        background-color: #FFC107;
    }

    input:focus + .slider {
        box-shadow: 0 0 1px #FFC107;
    }

    input:checked + .slider:before {
        transform: translateX(26px);
    }

    /* Rounded sliders */
    .slider.round {
        border-radius: 34px;
    }

        .slider.round:before {
            border-radius: 50%;
        }

    /* Form groups */
    .form-group {
        margin-bottom: 1rem;
    }

    .required {
        color: #dc3545;
    }
</style>

<script type="text/javascript">
    $(this.document).ready(function () {
        if ('@ViewBag.ErrorMsg' != null && '@ViewBag.ErrorMsg' != '') {
            notificationMessage('@ViewBag.ErrorMsg', 'danger')
            HRN.hideLoader();
        }

       if ('@TempData["SuccessMessage"]' != null && '@TempData["SuccessMessage"]' != '') {
        alert('@TempData["SuccessMessage"]');
        window.location="/Account/Login"
    }

        // Initialize transport months if not already initialized
        if (@(Model.TransportMonths == null ? "true" : "false")) {
            initializeTransportMonths();
        }

        // If there was a validation error on the transport months tab
        if ('@ViewBag.ActiveTab' === 'transport') {
            $('#transport-tab').tab('show');
        }
    });

    var onBeginSubmit = function () {
        // HRN.showLoader();
    };

    function onSuccess() {
        if ('@ViewBag.ErrorMsg' == null || '@ViewBag.ErrorMsg' == '') {
            HRN.hideLoader();
        }
    }

    function initializeTransportMonths() {
        // If needed, you can add AJAX call here to load months data
        // This is a fallback in case the model doesn't have TransportMonths initialized
        $.ajax({
            url: '/User/GetTransportMonths',
            type: 'GET',
            data: { userId: '@Model.UserId' },
            success: function(data) {
                if (data.success) {
                    // Handle successful data loading
                    location.reload();
                }
            },
            error: function() {
                notificationMessage('Failed to load transport months data', 'danger');
            }
        });
    }
</script>