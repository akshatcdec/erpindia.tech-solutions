@model ERPIndia.ViewModel.UserViewModel
<section class="content-header">
    <h1>Admins <small>create & edit admin</small></h1>
    <ol class="breadcrumb">
        <li><a href="@Url.Action("", "SiteMap")"><i class="fa fa-home"></i> Home</a></li>
        <li><a href="@Url.Action("", "Admin")">Admins</a></li>
        <li class="active">@ViewBag.Heading</li>
    </ol>
</section>
<section class="content">
    <div class="row">
        <div class="col-xs-12">
            @*@using (Ajax.BeginForm("Add", "", new AjaxOptions() { HttpMethod = "POST", OnBegin = "onBeginSubmit", UpdateTargetId = "divPageBody", OnSuccess = "onSuccess", OnFailure = "onFailure" }, new { @class = "form-horizontal" }))*@
            @using (Html.BeginForm("Add", "Admin", FormMethod.Post, new { enctype = "multipart/form-data", onsubmit = "onBeginSubmit()" }))
            {
                 @Html.AntiForgeryToken()
                <div class="box box-primary">
                    <div class="box-header"></div>
                    <div class="box-body">
                        <div class="message-box"></div>
                        <div class="row">
                            <div class="col-md-9">
                                <div class="row">
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            <label class="control-label">
                                                @Html.LabelFor(model => model.User.CompanyId)  <span class="required">*</span>
                                            </label>
                                            @Html.DropDownListFor(model => model.User.CompanyId, new SelectList(Model.Schools, "SchoolId", "SchoolName"), "-- Select School --", new { style = "", @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.User.CompanyId)
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            <label class="control-label">@Html.LabelFor(model => model.User.FirstName) <span class="required">*</span></label>
                                            @Html.TextBoxFor(model => model.User.FirstName, new { @class = "form-control", @maxlength = "50" })
                                            @Html.HiddenFor(model => model.User.UserId)
                                            @Html.ValidationMessageFor(model => model.User.FirstName)
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            <label class="control-label">
                                                @Html.LabelFor(model => model.User.MiddleName) <span class="required">*</span>
                                            </label>
                                            @Html.TextBoxFor(model => model.User.MiddleName, new { @class = "form-control", @maxlength = "50" })
                                            @Html.ValidationMessageFor(model => model.User.MiddleName)
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            <label class="control-label">
                                                @Html.LabelFor(model => model.User.LastName) <span class="required">*</span>
                                            </label>
                                            @Html.TextBoxFor(model => model.User.LastName, new { @class = "form-control", @maxlength = "50" })
                                            @Html.ValidationMessageFor(model => model.User.LastName)
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            <label class="control-label">
                                                @Html.LabelFor(model => model.User.Phone) <span class="required">*</span>
                                            </label>
                                            @Html.TextBoxFor(model => model.User.Phone, new { @class = "form-control", @maxlength = "50" })
                                            @Html.ValidationMessageFor(model => model.User.Phone)
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            <label class="control-label">
                                                @Html.LabelFor(model => model.User.Email) <span class="required">*</span>
                                            </label>
                                            @Html.TextBoxFor(model => model.User.Email, new { @class = "form-control", @maxlength = "50" })
                                            @Html.ValidationMessageFor(model => model.User.Email)
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            <label class="control-label">
                                                @Html.LabelFor(model => model.User.Password)  <span class="required">*</span>
                                            </label>
                                            @Html.TextBoxFor(model => model.User.Password, new { @class = "form-control", @onkeyup = "ValidateUserPassword(this.id,5)", @maxlength = "50", @value = Model.User.Password })
                                            @Html.ValidationMessageFor(model => model.User.Password, "", new { @value = Model.User.Password })
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            <label class="control-label">
                                                @Html.LabelFor(model => model.User.IsActive)  <span class="required">*</span>
                                            </label>
                                            <div>
                                                <div class="radio-list">
                                                    <label class="radio-inline">
                                                        @Html.RadioButtonFor(model => model.User.IsActive, "true", new { @checked = true }) Active
                                                    </label>
                                                    <label class="radio-inline">
                                                        @Html.RadioButtonFor(model => model.User.IsActive, "false") Inactive
                                                    </label>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="row margin-bottom-40">
                                    <div>
                                        <img class="profile-user-img img-responsive img-circle" src="@Url.Content(Model.User.ProfilePic)" alt="Profile Picture">
                                    </div>
                                </div>
                                <div class="row text-center">
                                    <div>
                                        <div class="form-group">
                                            <div class="btn btn-default btn-file">
                                                <i class="fa fa-user-circle"></i>&nbsp;&nbsp;@Html.DisplayNameFor(model => model.User.ProfilePic)
                                                <input type="file" name="ProfileImg" id="ProfileImg" />
                                            </div>
                                            @Html.HiddenFor(model => model.User.ProfilePic)
                                        </div>
                                    </div>.
                                </div>
                                <div class="row">
                                    <div>
                                        @Html.ValidationMessageFor(m => m.User.ProfilePic)
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="form-actions">
                    <div class="row text-center">
                        <div class="col-md-12">
                            <button type="submit" class="btn btn-success btn-flat"><i class="fa fa-save"></i>&nbsp;&nbsp;Save</button>
                            <button type="reset" class="btn  btn-primary btn-flat" onclick="$(this).resetValidation()"><i class="fa fa-undo"></i>&nbsp;&nbsp;Reset</button>
                            <a class="btn btn-primary btn-flat" href="@Url.Action("", "Admin")"><i class="fa fa-ban"></i>&nbsp;&nbsp;Cancel</a>
                        </div>
                    </div>
                </div>
            }
        </div>

    </div>
</section>

<script type="text/javascript">
    $(this.document).ready(function () {
        if ('@ViewBag.ErrorMsg' != null && '@ViewBag.ErrorMsg' != '') {
            HRN.hideLoader();
            notificationMessage('@ViewBag.ErrorMsg', 'danger')
        }
    });

    var onBeginSubmit = function () {
        //HRN.showLoader();
    };

    function onSuccess() {
        if ('@ViewBag.ErrorMsg' == null || '@ViewBag.ErrorMsg' == '') {
            //setAnimation(true);
            //window.location.href = window.location.href.split('#')[0] + 'Admin';
            HRN.hideLoader();
            window.location.href = '@Url.Action("Index")?status=s';
            //loadPage('@Url.Action("Index")?status=s');
        }
    }

    function onFailure() {
        console.log('failure');
        HRN.hideLoader();
    }
</script>
