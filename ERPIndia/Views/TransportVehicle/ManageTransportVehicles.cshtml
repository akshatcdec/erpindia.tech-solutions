@{
    ViewBag.Title = "Manage Transport Vehicles";
    var sessionId = ViewBag.SessionId;
    var sessionYear = ViewBag.SessionYear;
}
<!-- SweetAlert 1 CDN -->
<script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-header bg-primary text-white">
                <h5 class="mb-0">
                    <i class="fas fa-bus mr-2"></i> Transport Vehicles Management
                </h5>
            </div>
            <div class="card-body">
                <div class="row mb-4">
                    <div class="col-md-4">
                        <div class="card border-primary">
                            <div class="card-header bg-light">
                                <h6 class="mb-0" id="formTitle">Add New Vehicle</h6>
                            </div>
                            <div class="card-body">
                                <form id="vehicleForm">
                                    <input type="hidden" id="vehicleId">
                                    <input type="hidden" id="sessionYear" value="@sessionYear">

                                    <div class="form-group">
                                        <label for="vehicleNo">Vehicle Number <span class="text-danger">*</span></label>
                                        <input type="text" class="form-control" id="vehicleNo" placeholder="Enter vehicle number" required>
                                        <div class="invalid-feedback" id="vehicleNoError"></div>
                                    </div>

                                    <div class="form-group">
                                        <label for="driverName">Driver Name</label>
                                        <input type="text" class="form-control" id="driverName" placeholder="Enter driver name">
                                    </div>

                                    <div class="form-group">
                                        <label for="note">Notes</label>
                                        <textarea class="form-control" id="note" rows="3" placeholder="Enter additional notes"></textarea>
                                    </div>

                                    <div class="form-group">
                                        <label for="sortOrder">Sort Order</label>
                                        <input type="number" class="form-control" id="sortOrder" min="0" value="0">
                                    </div>

                                    <div class="form-group">
                                        <div class="custom-control custom-switch">
                                            <input type="checkbox" class="custom-control-input" id="isActive" checked>
                                            <label class="custom-control-label" for="isActive">Active</label>
                                        </div>
                                    </div>

                                    <div class="form-group mt-4 d-flex justify-content-between">
                                        <button type="submit" class="btn btn-primary" id="saveBtn">
                                            <i class="fas fa-save mr-1"></i> Save
                                        </button>
                                        <button type="button" class="btn btn-secondary" id="resetBtn">
                                            <i class="fas fa-undo mr-1"></i> Reset
                                        </button>
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-8">
                        <div class="card border-primary">
                            <div class="card-header bg-light">
                                <div class="d-flex justify-content-between align-items-center">
                                    <h6 class="mb-0">Vehicle List</h6>
                                    <button type="button" class="btn btn-sm btn-success" id="refreshBtn">
                                        <i class="fas fa-sync-alt mr-1"></i> Refresh
                                    </button>
                                </div>
                            </div>
                            <div class="card-body">
                                <div class="table-responsive">
                                    <table class="table table-bordered table-striped table-hover" id="vehiclesTable" width="100%">
                                        <thead class="thead-light">
                                            <tr>
                                                <th>Vehicle No</th>
                                                <th>Driver Name</th>
                                                <th>Notes</th>
                                                <th>Sort Order</th>
                                                <th>Status</th>
                                                <th>Actions</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            <!-- Data will be loaded here -->
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" role="dialog" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title" id="deleteModalLabel">Confirm Delete</h5>
                <button type="button" class="close text-white" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete this vehicle? This action cannot be undone.</p>
                <p id="deleteVehicleInfo" class="font-weight-bold"></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" id="confirmDeleteBtn">Delete</button>
            </div>
        </div>
    </div>
</div>


<script>
        $(document).ready(function () {
            // Variables
            var vehicleId = null;
            var vehiclesTable = null;
            var apiUrl = {
                getAll: '@Url.Action("GetAllTransportVehicles", "TransportVehicle")',
                getById: '@Url.Action("GetTransportVehicleById", "TransportVehicle")',
                save: '@Url.Action("SaveTransportVehicle", "TransportVehicle")',
                delete: '@Url.Action("DeleteTransportVehicle", "TransportVehicle")',
                checkDuplicate: '@Url.Action("CheckDuplicateVehicleNo", "TransportVehicle")',
                getNextSortOrder: '@Url.Action("GetNextSortOrder", "TransportVehicle")'
            };

            // Initialize DataTable
            initializeDataTable();

            // Get next sort order
            getNextSortOrder();

            // Event Handlers
            $('#vehicleForm').on('submit', function (e) {
                e.preventDefault();
                if (validateForm()) {
                    saveVehicle();
                }
            });

            $('#vehicleNo').on('blur', function () {
                if ($(this).val().trim() !== '') {
                    checkDuplicateVehicleNo();
                }
            });

            $('#resetBtn').on('click', function () {
                resetForm();
            });

            $('#refreshBtn').on('click', function () {
                refreshTable();
            });

            $('#confirmDeleteBtn').on('click', function () {
                var id = $(this).data('id');
                deleteVehicle(id);
            });

            // Functions
            function initializeDataTable() {
                vehiclesTable = $('#vehiclesTable').DataTable({
                    processing: true,
                    serverSide: true,
                    ajax: {
                        url: apiUrl.getAll,
                        type: 'POST',
                        error: function (xhr, error, thrown) {
                            console.error("DataTable error:", error, thrown);
                            showNotification("Error loading data: " + error, 'error');
                        }
                    },
                    columns: [
                        { data: 'VehicleNo', name: 'VehicleNo' },
                        {
                            data: 'DriverName',
                            name: 'DriverName',
                            render: function (data) {
                                return data || '<em class="text-muted">Not specified</em>';
                            }
                        },
                        {
                            data: 'Note',
                            name: 'Note',
                            render: function (data) {
                                return data || '<em class="text-muted">No notes</em>';
                            }
                        },
                        { data: 'SortOrder', name: 'SortOrder' },
                        {
                            data: 'IsActive',
                            name: 'IsActive',
                            render: function (data) {
                                return data ?
                                    '<span class="badge badge-success">Active</span>' :
                                    '<span class="badge badge-danger">Inactive</span>';
                            }
                        },
                        {
                            data: 'TransportVehiclesId',
                            name: 'Actions',
                            orderable: false,
                            searchable: false,
                            render: function (data) {
                                return '<div class="btn-group btn-group-sm" role="group">' +
                                    '<button type="button" class="btn btn-primary edit-btn" data-id="' + data + '" title="Edit">' +
                                    '<i class="fas fa-edit"></i></button> ' +
                                    '<button type="button" class="btn btn-danger delete-btn" data-id="' + data + '" title="Delete">' +
                                    '<i class="fas fa-trash"></i></button>' +
                                    '</div>';
                            }
                        }
                    ],
                    order: [[3, 'asc']], // Sort by SortOrder by default
                    dom: 'Bfrtip',
                    buttons: [
                        'copy', 'excel', 'pdf', 'print'
                    ],
                    lengthMenu: [[10, 25, 50, -1], [10, 25, 50, "All"]],
                    pageLength: 10,
                    responsive: true
                });

                // Edit button click event
                $('#vehiclesTable tbody').on('click', '.edit-btn', function () {
                    var id = $(this).data('id');
                    loadVehicleForEdit(id);
                });

                // Delete button click event
                $('#vehiclesTable tbody').on('click', '.delete-btn', function () {
                    var id = $(this).data('id');
                    var vehicleNo = $(this).closest('tr').find('td:first').text();
                    showDeleteConfirmation(id, vehicleNo);
                });
            }

            function validateForm() {
                var isValid = true;

                // Reset validation
                $('#vehicleNo').removeClass('is-invalid');
                $('#vehicleNoError').text('');

                // Validate Vehicle Number
                if ($('#vehicleNo').val().trim() === '') {
                    $('#vehicleNo').addClass('is-invalid');
                    $('#vehicleNoError').text('Vehicle Number is required');
                    isValid = false;
                }

                return isValid;
            }

            function checkDuplicateVehicleNo() {
                var vehicleNo = $('#vehicleNo').val().trim();

                $.get(apiUrl.checkDuplicate, { vehicleNo: vehicleNo, id: vehicleId })
                    .done(function (result) {
                        if (result.isDuplicate) {
                            $('#vehicleNo').addClass('is-invalid');
                            $('#vehicleNoError').text('This Vehicle Number already exists');
                        } else {
                            $('#vehicleNo').removeClass('is-invalid');
                            $('#vehicleNoError').text('');
                        }
                    })
                    .fail(function (xhr) {
                        console.error("Error checking duplicate:", xhr.responseText);
                        showNotification("Error checking duplicate vehicle number", 'error');
                    });
            }

            function getNextSortOrder() {
                $.get(apiUrl.getNextSortOrder)
                    .done(function (result) {
                        if (result.success) {
                            $('#sortOrder').val(result.nextSortOrder);
                        }
                    })
                    .fail(function (xhr) {
                        console.error("Error getting next sort order:", xhr.responseText);
                    });
            }

            function loadVehicleForEdit(id) {
                $.get(apiUrl.getById, { id: id })
                    .done(function (result) {
                        if (result.success) {
                            var vehicle = result.data;

                            // Set form fields
                            vehicleId = vehicle.TransportVehiclesId;
                            $('#vehicleId').val(vehicleId);
                            $('#vehicleNo').val(vehicle.VehicleNo);
                            $('#driverName').val(vehicle.DriverName);
                            $('#note').val(vehicle.Note);
                            $('#sortOrder').val(vehicle.SortOrder);
                            $('#isActive').prop('checked', vehicle.IsActive);

                            // Update form title
                            $('#formTitle').text('Edit Vehicle: ' + vehicle.VehicleNo);
                            $('#saveBtn').html('<i class="fas fa-save mr-1"></i> Update');

                            // Scroll to form on mobile
                            if ($(window).width() < 768) {
                                $('html, body').animate({
                                    scrollTop: $("#vehicleForm").offset().top - 20
                                }, 500);
                            }
                        } else {
                            toastr.error(result.message || "Error loading vehicle data");
                        }
                    })
                    .fail(function (xhr) {
                        console.error("Error loading vehicle:", xhr.responseText);
                        toastr.error("Error loading vehicle data");
                    });
            }

            function saveVehicle() {
                var formData = {
                    TransportVehiclesId: $('#vehicleId').val(),
                    VehicleNo: $('#vehicleNo').val().trim(),
                    DriverName: $('#driverName').val().trim(),
                    Note: $('#note').val().trim(),
                    SortOrder: parseInt($('#sortOrder').val()) || 0,
                    IsActive: $('#isActive').is(':checked')
                };

                // Disable save button
                $('#saveBtn').prop('disabled', true).html('<i class="fas fa-spinner fa-spin mr-1"></i> Saving...');

                $.ajax({
                    url: apiUrl.save,
                    type: 'POST',
                    data: formData,
                    success: function (result) {
                        if (result.success) {
                            showNotification(result.message, 'success');
                            resetForm();
                            refreshTable();
                        } else {
                            showNotification(result.message || "Error saving vehicle", 'error');
                        }
                    },
                    error: function (xhr) {
                        console.error("Error saving vehicle:", xhr.responseText);
                        showNotification("Error saving vehicle data", 'error');
                    },
                    complete: function () {
                        // Re-enable save button
                        $('#saveBtn').prop('disabled', false).html('<i class="fas fa-save mr-1"></i> Save');
                    }
                });
            }

            function showDeleteConfirmation(id, vehicleNo) {
                $('#deleteVehicleInfo').text('Vehicle Number: ' + vehicleNo);
                $('#confirmDeleteBtn').data('id', id);
                $('#deleteModal').modal('show');
            }

            function deleteVehicle(id) {
                // Disable delete button
                $('#confirmDeleteBtn').prop('disabled', true).html('<i class="fas fa-spinner fa-spin mr-1"></i> Deleting...');

                $.ajax({
                    url: apiUrl.delete,
                    type: 'POST',
                    data: { id: id },
                    success: function (result) {
                        if (result.success) {
                            showNotification(result.message, 'success');
                            refreshTable();
                        } else {
                            showNotification(result.message || "Error deleting vehicle", 'error');
                        }
                        $('#deleteModal').modal('hide');
                    },
                    error: function (xhr) {
                        console.error("Error deleting vehicle:", xhr.responseText);
                        showNotification("Error deleting vehicle data", 'error');
                    },
                    complete: function () {
                        // Re-enable delete button
                        $('#confirmDeleteBtn').prop('disabled', false).html('Delete');
                    }
                });
            }

            // Custom notification function (instead of toastr)
            function showNotification(message, type) {
                // Using SweetAlert which is included in your project
                swal({
                    title: type === 'success' ? 'Success!' : 'Error!',
                    text: message,
                    icon: type,
                    button: "OK",
                });
            }

            function resetForm() {
                // Clear form values
                vehicleId = null;
                $('#vehicleId').val('');
                $('#vehicleNo').val('');
                $('#driverName').val('');
                $('#note').val('');
                $('#isActive').prop('checked', true);

                // Reset validation
                $('#vehicleNo').removeClass('is-invalid');
                $('#vehicleNoError').text('');

                // Update form title and button
                $('#formTitle').text('Add New Vehicle');
                $('#saveBtn').html('<i class="fas fa-save mr-1"></i> Save');

                // Get next sort order
                getNextSortOrder();
            }

            function refreshTable() {
                if (vehiclesTable) {
                    vehiclesTable.ajax.reload();
                }
            }
        });
</script>



<style>
    .form-group label {
        font-weight: 500;
    }

    .invalid-feedback {
        display: block;
    }

    .table thead th {
        background-color: #f8f9fa;
    }

    .btn-group-sm > .btn {
        padding: 0.25rem 0.5rem;
    }

    .badge {
        font-size: 90%;
    }

    /* Responsive improvements */
    @@media (max-width: 768px) {
        .card-body {
            padding: 0.75rem;
        }

        #vehiclesTable_wrapper .dt-buttons {
            margin-bottom: 10px;
        }
    }
</style>
